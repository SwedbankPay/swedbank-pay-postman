{
	"info": {
		"_postman_id": "c10cd827-31e3-4146-9a21-68d6f31c2282",
		"name": "example flows",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "checkout",
			"item": [
				{
					"name": "Create paymentOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "380b8a83-3ca3-42bf-aebf-fd96d551c5a5",
								"exec": [
									"responseCode = pm.response.code;\r",
									"responseBody = pm.response.json();\r",
									"\r",
									"if (responseCode >= 200 && responseCode < 300) {\r",
									"    // Finding the values to set to globals\r",
									"    const paymentId = responseBody.paymentOrder.id;\r",
									"    const operations = responseBody.operations;\r",
									"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
									"    const seamlessPayment = operations.find(operations => operations.rel === \"view-paymenOrder\");\r",
									"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
									"    // Use data to populate immediately relevant data to continue flow.\r",
									"    pm.environment.set(\"paymentId\", paymentId);                                                 // These will only be set if the operation is found\r",
									"    pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
									"    pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
									"    pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{merchantToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"paymentorder\": {\n        \"operation\": \"Purchase\",\n        \"amount\": 15000,\n        \"vatAmount\": 0,\n        \"currency\": \"{{currency}}\",\n        \"description\": \"{{description}}\",\n        \"language\": \"{{language}}\",\n        \"userAgent\": \"Mozilla/5.0\",\n        \"disablePaymentMenu\": false,\n        \"orderItems\": [\n            {\n                \"reference\": \"P1\",\n                \"name\": \"Product1\",\n                \"type\": \"PRODUCT\",\n                \"class\": \"ProductGroup1\",\n                \"itemUrl\": \"https://www.demoshop.com/shop/id=666\",\n                \"imageUrl\": \"https://www.demoshop.com/product1.jpg\",\n                \"description\": \"Product 1 description\",\n                \"discountDescription\": \"Volume discount\",\n                \"quantity\": 2,\n                \"quantityUnit\": \"pcs\",\n                \"unitPrice\": 2500,\n                \"discountPrice\": 0,\n                \"vatPercent\": 0,\n                \"amount\": 5000,\n                \"vatAmount\": 0\n            },\n            {\n                \"reference\": \"P2\",\n                \"name\": \"Product2\",\n                \"type\": \"PRODUCT\",\n                \"class\": \"ProductGroup1\",\n                \"description\": \"Product 2 description\",\n                \"quantity\": 5.00,\n                \"quantityUnit\": \"kg\",\n                \"unitPrice\": 1000,\n                \"vatPercent\": 0,\n                \"amount\": 5000,\n                \"vatAmount\": 0\n            },\n            {\n                \"reference\": \"P2\",\n                \"name\": \"Product2\",\n                \"type\": \"PRODUCT\",\n                \"class\": \"ProductGroup1\",\n                \"description\": \"Product 2 description\",\n                \"quantity\": 5.00,\n                \"quantityUnit\": \"kg\",\n                \"unitPrice\": 1000,\n                \"vatPercent\": 0,\n                \"amount\": 5000,\n                \"vatAmount\": 0\n            }\n        ],\n        \"urls\": {\n            \"hostUrls\": [\n                \"{{hostUrl}}\"\n            ],\n            \"completeUrl\": \"{{completeUrl}}\",\n            \"cancelUrl\": \"{{cancelUrl}}\",\n            \"callbackUrl\": \"{{callbackUrl}}\",\n            \"termsOfServiceUrl\": \"{{ToSUrl}}\",\n            \"logoUrl\": \"{{logoUrl}}\"\n        },\n        \"payeeInfo\": {\n            \"payeeId\": \"{{merchantId}}\",\n            \"payeeReference\": \"{{payeeReference}}\",\n            \"payeeName\": \"{{merchantName}}\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/psp/paymentorders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"psp",
								"paymentorders"
							]
						}
					},
					"response": [
						{
							"name": "Regular paymentOrder",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"paymentorder\": {\n        \"operation\": \"Purchase\",\n        \"amount\": 10000,\n        \"vatAmount\": 0,\n        \"currency\": \"SEK\",\n        \"description\": \"test description\",\n        \"language\": \"sv-SE\",\n        \"userAgent\": \"Mozilla/5.0\",\n        \"disablePaymentMenu\": false,\n        \"orderItems\": [\n            {\n                \"reference\": \"P1\",\n                \"name\": \"Product1\",\n                \"type\": \"PRODUCT\",\n                \"class\": \"ProductGroup1\",\n                \"itemUrl\": \"https://www.demoshop.com/shop/id=666\",\n                \"imageUrl\": \"https://www.demoshop.com/product1.jpg\",\n                \"description\": \"Product 1 description\",\n                \"discountDescription\": \"Volume discount\",\n                \"quantity\": 2,\n                \"quantityUnit\": \"pcs\",\n                \"unitPrice\": 2500,\n                \"discountPrice\": 0,\n                \"vatPercent\": 0,\n                \"amount\": 5000,\n                \"vatAmount\": 0\n            },\n            {\n                \"reference\": \"P2\",\n                \"name\": \"Product2\",\n                \"type\": \"PRODUCT\",\n                \"class\": \"ProductGroup1\",\n                \"description\": \"Product 2 description\",\n                \"quantity\": 5.00,\n                \"quantityUnit\": \"kg\",\n                \"unitPrice\": 1000,\n                \"vatPercent\": 0,\n                \"amount\": 5000,\n                \"vatAmount\": 0\n            }\n        ],\n        \"urls\": {\n        \t\"hostUrls\": [\n        \t\t\"https://en.wikipedia.org/wiki/Host\"\n    \t\t],\n            \"completeUrl\": \"https://en.wikipedia.org/wiki/Success\",\n            \"cancelUrl\": \"https://en.wikipedia.org/wiki/Cancel\",\n            \"callbackUrl\": \"https://en.wikipedia.org/wiki/Callback\",\n            \"termsOfServiceUrl\": \"https://en.wikipedia.org/wiki/Terms_Of_Service\",\n            \"logoUrl\": \"https://design.swedbankpay.com/v/4.5.0/img/swedbankpay-logo.svg\"\n        },\n        \"payeeInfo\": {\n            \"payeeId\": \"734310b0-f9b5-48ea-b730-b3628d907f0c\",\n            \"payeeReference\": \"someUniquereference123897\",\n            \"payeeName\": \"test merchant\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/psp/paymentorders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"psp",
										"paymentorders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Location",
									"value": "http://api.externalintegration.payex.com/psp/paymentorders/44b5c314-e90e-4d09-adec-08d7fcb6ccea"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/8.5"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Fri, 22 May 2020 11:53:57 GMT"
								},
								{
									"key": "Content-Length",
									"value": "1850"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=16070400; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "{\n    \"paymentOrder\": {\n        \"id\": \"/psp/paymentorders/44b5c314-e90e-4d09-adec-08d7fcb6ccea\",\n        \"created\": \"2020-05-22T11:53:57.7510564Z\",\n        \"updated\": \"2020-05-22T11:53:58.0206452Z\",\n        \"operation\": \"Purchase\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"amount\": 10000,\n        \"vatAmount\": 0,\n        \"orderItems\": {\n            \"id\": \"/psp/paymentorders/44b5c314-e90e-4d09-adec-08d7fcb6ccea/orderitems\"\n        },\n        \"description\": \"test description\",\n        \"initiatingSystemUserAgent\": \"Mozilla/5.0\",\n        \"userAgent\": \"Mozilla/5.0\",\n        \"language\": \"sv-SE\",\n        \"urls\": {\n            \"id\": \"/psp/paymentorders/44b5c314-e90e-4d09-adec-08d7fcb6ccea/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/paymentorders/44b5c314-e90e-4d09-adec-08d7fcb6ccea/payeeInfo\"\n        },\n        \"payments\": {\n            \"id\": \"/psp/paymentorders/44b5c314-e90e-4d09-adec-08d7fcb6ccea/payments\"\n        },\n        \"currentPayment\": {\n            \"id\": \"/psp/paymentorders/44b5c314-e90e-4d09-adec-08d7fcb6ccea/currentpayment\"\n        },\n        \"items\": [\n            {\n                \"creditCard\": {\n                    \"cardBrands\": [\n                        \"Visa\",\n                        \"MasterCard\",\n                        \"Amex\",\n                        \"Dankort\",\n                        \"Diners\",\n                        \"Finax\",\n                        \"Forbrugsforeningen\",\n                        \"Jcb\",\n                        \"IkanoFinansDk\",\n                        \"Lindex\",\n                        \"Maestro\",\n                        \"Ica\"\n                    ]\n                }\n            }\n        ]\n    },\n    \"operations\": [\n        {\n            \"method\": \"PATCH\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/44b5c314-e90e-4d09-adec-08d7fcb6ccea\",\n            \"rel\": \"update-paymentorder-updateorder\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"PATCH\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/44b5c314-e90e-4d09-adec-08d7fcb6ccea\",\n            \"rel\": \"update-paymentorder-abort\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/e0b696508f16431e6159d6b07118b6791d271d2e3d2cab3ab1845f530ff6e6f9\",\n            \"rel\": \"redirect-paymentorder\",\n            \"contentType\": \"text/html\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/paymentmenu/core/scripts/client/px.paymentmenu.client.js?token=e0b696508f16431e6159d6b07118b6791d271d2e3d2cab3ab1845f530ff6e6f9&culture=sv-SE\",\n            \"rel\": \"view-paymentorder\",\n            \"contentType\": \"application/javascript\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get paymentOrder (verify authorization OK and proceed)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a501232b-a677-47b4-b737-b48503433e80",
								"exec": [
									"responseCode = pm.response.code;\r",
									"responseBody = pm.response.json();\r",
									"\r",
									"if (responseCode >= 200 && responseCode < 300) {\r",
									"    const operations = responseBody.operations;\r",
									"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
									"    const seamlessPayment = operations.find(operations => operations.rel === \"view-paymenOrder\");\r",
									"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
									"    const capturePayment = operations.find(operations => operations.rel === \"create-paymentorder-capture\");\r",
									"    const cancelPayment = operations.find(operations => operations.rel === \"create-paymentorder-cancel\");\r",
									"    const reversePayment = operations.find(operations => operations.rel === \"create-paymentorder-reversal\");\r",
									"    const paidPayment = operations.find(operations => operations.rel === \"paid-paymentOrder\");\r",
									"    // Use data to populate immediately relevant data to continue flow.\r",
									"    if (!paidPayment) {                                                                            // These will only be set if the operation is found\r",
									"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
									"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
									"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
									"    }\r",
									"    else\r",
									"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
									"\r",
									"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
									"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
									"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
									"    const reversePaymentOrder = pm.variables.get(\"operationreversePayment\");\r",
									"    reversePaymentOrder === \"N/A\" ? postman.setNextRequest(\"capture paymentOrder\") : postman.setNextRequest(\"reverse paymentOrder\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{merchantToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}{{paymentId}}?$expand=currentPayment",
							"host": [
								"{{baseUrl}}{{paymentId}}"
							],
							"query": [
								{
									"key": "$expand",
									"value": "currentPayment"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get paymentOrder",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.externalintegration.payex.com/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3",
									"protocol": "https",
									"host": [
										"api",
										"externalintegration",
										"payex",
										"com"
									],
									"path": [
										"psp",
										"paymentorders",
										"abcf1b37-6cf5-49a2-1392-08d7fe4a79b3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/8.5"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Fri, 22 May 2020 12:21:21 GMT"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=16070400; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "{\n    \"paymentOrder\": {\n        \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3\",\n        \"created\": \"2020-05-22T12:20:48.8045871Z\",\n        \"updated\": \"2020-05-22T12:21:07.2297997Z\",\n        \"operation\": \"Purchase\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"amount\": 10000,\n        \"vatAmount\": 0,\n        \"remainingReversalAmount\": 10000,\n        \"orderItems\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/orderitems\"\n        },\n        \"description\": \"test description\",\n        \"initiatingSystemUserAgent\": \"Mozilla/5.0\",\n        \"userAgent\": \"Mozilla/5.0\",\n        \"language\": \"sv-SE\",\n        \"urls\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/payeeInfo\"\n        },\n        \"payments\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/payments\"\n        },\n        \"currentPayment\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/currentpayment\"\n        },\n        \"items\": [\n            {\n                \"creditCard\": {\n                    \"cardBrands\": [\n                        \"Visa\",\n                        \"MasterCard\",\n                        \"Amex\",\n                        \"Dankort\",\n                        \"Diners\",\n                        \"Finax\",\n                        \"Forbrugsforeningen\",\n                        \"Jcb\",\n                        \"IkanoFinansDk\",\n                        \"Lindex\",\n                        \"Maestro\",\n                        \"Ica\"\n                    ]\n                }\n            }\n        ]\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/reversals\",\n            \"rel\": \"create-paymentorder-reversal\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/486721ed-2acb-4c2b-bb24-08d7fe4a9a27/reversals\",\n            \"rel\": \"create-reversal\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/swish/core/scripts/client/px.swish.client.js?token=f9e9782a59ba56bbc496ab85c6e2aacdd06a3a89acf89e2a89267b3b4b1eb07d&Culture=sv-SE\",\n            \"rel\": \"view-payment\",\n            \"contentType\": \"application/javascript\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/paid\",\n            \"rel\": \"paid-paymentorder\",\n            \"contentType\": \"application/json\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "capture paymentOrder",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{merchantToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transaction\": {\n        \"amount\": 10000,\n        \"vatAmount\": 0,\n        \"bonusAmount\": 0,\n        \"payeeReference\": \"{{payeeReference}}\",\n        \"description\": \"description for transaction\",\n        \"orderItems\": [\n            {\n                \"reference\": \"P1\",\n                \"name\": \"Product1\",\n                \"type\": \"PRODUCT\",\n                \"class\": \"ProductGroup1\",\n                \"itemUrl\": \"https://www.demoshop.com/shop/id=666\",\n                \"imageUrl\": \"https://www.demoshop.com/product1.jpg\",\n                \"description\": \"Product 1 description\",\n                \"discountDescription\": \"Volume discount\",\n                \"quantity\": 2,\n                \"quantityUnit\": \"pcs\",\n                \"unitPrice\": 2500,\n                \"discountPrice\": 0,\n                \"vatPercent\": 0,\n                \"amount\": 5000,\n                \"vatAmount\": 0\n            },\n            {\n                \"reference\": \"P2\",\n                \"name\": \"Product2\",\n                \"type\": \"PRODUCT\",\n                \"class\": \"ProductGroup1\",\n                \"description\": \"Product 2 description\",\n                \"quantity\": 5.00,\n                \"quantityUnit\": \"kg\",\n                \"unitPrice\": 1000,\n                \"vatPercent\": 0,\n                \"amount\": 5000,\n                \"vatAmount\": 0\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{operationcapturePayment}}",
							"host": [
								"{{operationcapturePayment}}"
							]
						}
					},
					"response": [
						{
							"name": "capture paymentOrder",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"amount\": 10000,\n        \"vatAmount\": 0,\n        \"bonusAmount\": 0,\n        \"payeeReference\": \"someUniqueReference1590150186\",\n        \"description\": \"description for transaction\",\n        \"orderItems\": [\n            {\n                \"reference\": \"P1\",\n                \"name\": \"Product1\",\n                \"type\": \"PRODUCT\",\n                \"class\": \"ProductGroup1\",\n                \"itemUrl\": \"https://www.demoshop.com/shop/id=666\",\n                \"imageUrl\": \"https://www.demoshop.com/product1.jpg\",\n                \"description\": \"Product 1 description\",\n                \"discountDescription\": \"Volume discount\",\n                \"quantity\": 2,\n                \"quantityUnit\": \"pcs\",\n                \"unitPrice\": 2500,\n                \"discountPrice\": 0,\n                \"vatPercent\": 0,\n                \"amount\": 5000,\n                \"vatAmount\": 0\n            },\n            {\n                \"reference\": \"P2\",\n                \"name\": \"Product2\",\n                \"type\": \"PRODUCT\",\n                \"class\": \"ProductGroup1\",\n                \"description\": \"Product 2 description\",\n                \"quantity\": 5.00,\n                \"quantityUnit\": \"kg\",\n                \"unitPrice\": 1000,\n                \"vatPercent\": 0,\n                \"amount\": 5000,\n                \"vatAmount\": 0\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.externalintegration.payex.com/psp/paymentorders/562482e8-06fb-432d-13a7-08d7fe4a79b3/captures",
									"protocol": "https",
									"host": [
										"api",
										"externalintegration",
										"payex",
										"com"
									],
									"path": [
										"psp",
										"paymentorders",
										"562482e8-06fb-432d-13a7-08d7fe4a79b3",
										"captures"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/8.5"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Fri, 22 May 2020 12:23:07 GMT"
								},
								{
									"key": "Content-Length",
									"value": "637"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=16070400; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "{\n    \"payment\": \"/psp/creditcard/payments/120da28e-86fb-4ef0-0a50-08d7fe4a78cb\",\n    \"capture\": {\n        \"id\": \"/psp/creditcard/payments/120da28e-86fb-4ef0-0a50-08d7fe4a78cb/captures/4ea87d93-bd93-4cd4-9f1e-08d7fe4a5f78\",\n        \"transaction\": {\n            \"id\": \"/psp/creditcard/payments/120da28e-86fb-4ef0-0a50-08d7fe4a78cb/transactions/4ea87d93-bd93-4cd4-9f1e-08d7fe4a5f78\",\n            \"created\": \"2020-05-22T12:23:07.4823169Z\",\n            \"updated\": \"2020-05-22T12:23:07.5262582Z\",\n            \"type\": \"Capture\",\n            \"state\": \"Completed\",\n            \"number\": 40101653434,\n            \"amount\": 10000,\n            \"vatAmount\": 0,\n            \"description\": \"description for transaction\",\n            \"payeeReference\": \"someUniqueReference1590150186\",\n            \"isOperational\": false,\n            \"operations\": []\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get paymentOrder (verify capture OK and proceed)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1685153c-bba3-48be-ac34-ac00bd1d8af3",
								"exec": [
									"responseCode = pm.response.code;\r",
									"responseBody = pm.response.json();\r",
									"\r",
									"if (responseCode >= 200 && responseCode < 300) {\r",
									"    const operations = responseBody.operations;\r",
									"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
									"    const seamlessPayment = operations.find(operations => operations.rel === \"view-paymenOrder\");\r",
									"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
									"    const capturePayment = operations.find(operations => operations.rel === \"create-paymentorder-capture\");\r",
									"    const cancelPayment = operations.find(operations => operations.rel === \"create-paymentorder-cancel\");\r",
									"    const reversePayment = operations.find(operations => operations.rel === \"create-paymentorder-reversal\");\r",
									"    const paidPayment = operations.find(operations => operations.rel === \"paid-paymentOrder\");\r",
									"    // Use data to populate immediately relevant data to continue flow.\r",
									"    if (!paidPayment) {                                                                            // These will only be set if the operation is found\r",
									"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
									"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
									"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
									"    }\r",
									"    else\r",
									"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
									"\r",
									"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
									"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
									"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{merchantToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}{{paymentId}}?$expand=currentPayment",
							"host": [
								"{{baseUrl}}{{paymentId}}"
							],
							"query": [
								{
									"key": "$expand",
									"value": "currentPayment"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get paymentOrder",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.externalintegration.payex.com/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3",
									"protocol": "https",
									"host": [
										"api",
										"externalintegration",
										"payex",
										"com"
									],
									"path": [
										"psp",
										"paymentorders",
										"abcf1b37-6cf5-49a2-1392-08d7fe4a79b3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/8.5"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Fri, 22 May 2020 12:21:21 GMT"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=16070400; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "{\n    \"paymentOrder\": {\n        \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3\",\n        \"created\": \"2020-05-22T12:20:48.8045871Z\",\n        \"updated\": \"2020-05-22T12:21:07.2297997Z\",\n        \"operation\": \"Purchase\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"amount\": 10000,\n        \"vatAmount\": 0,\n        \"remainingReversalAmount\": 10000,\n        \"orderItems\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/orderitems\"\n        },\n        \"description\": \"test description\",\n        \"initiatingSystemUserAgent\": \"Mozilla/5.0\",\n        \"userAgent\": \"Mozilla/5.0\",\n        \"language\": \"sv-SE\",\n        \"urls\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/payeeInfo\"\n        },\n        \"payments\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/payments\"\n        },\n        \"currentPayment\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/currentpayment\"\n        },\n        \"items\": [\n            {\n                \"creditCard\": {\n                    \"cardBrands\": [\n                        \"Visa\",\n                        \"MasterCard\",\n                        \"Amex\",\n                        \"Dankort\",\n                        \"Diners\",\n                        \"Finax\",\n                        \"Forbrugsforeningen\",\n                        \"Jcb\",\n                        \"IkanoFinansDk\",\n                        \"Lindex\",\n                        \"Maestro\",\n                        \"Ica\"\n                    ]\n                }\n            }\n        ]\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/reversals\",\n            \"rel\": \"create-paymentorder-reversal\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/486721ed-2acb-4c2b-bb24-08d7fe4a9a27/reversals\",\n            \"rel\": \"create-reversal\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/swish/core/scripts/client/px.swish.client.js?token=f9e9782a59ba56bbc496ab85c6e2aacdd06a3a89acf89e2a89267b3b4b1eb07d&Culture=sv-SE\",\n            \"rel\": \"view-payment\",\n            \"contentType\": \"application/javascript\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/paid\",\n            \"rel\": \"paid-paymentorder\",\n            \"contentType\": \"application/json\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "reverse paymentOrder",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{merchantToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transaction\": {\n        \"amount\": 5000,\n        \"vatAmount\": 0,\n        \"bonusAmount\": 0,\n        \"payeeReference\": \"{{payeeReference}}\",\n        \"description\": \"description for transaction\",\n        \"orderItems\": [\n            {\n                \"reference\": \"P1\",\n                \"name\": \"Product1\",\n                \"type\": \"PRODUCT\",\n                \"class\": \"ProductGroup1\",\n                \"itemUrl\": \"https://www.demoshop.com/shop/id=666\",\n                \"imageUrl\": \"https://www.demoshop.com/product1.jpg\",\n                \"description\": \"Product 1 description\",\n                \"discountDescription\": \"Volume discount\",\n                \"quantity\": 2,\n                \"quantityUnit\": \"pcs\",\n                \"unitPrice\": 2500,\n                \"discountPrice\": 0,\n                \"vatPercent\": 0,\n                \"amount\": 5000,\n                \"vatAmount\": 0\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{operationreversePayment}}",
							"host": [
								"{{operationreversePayment}}"
							]
						}
					},
					"response": [
						{
							"name": "reverse paymentOrder",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"amount\": 5000,\n        \"vatAmount\": 0,\n        \"bonusAmount\": 0,\n        \"payeeReference\": \"someUniqueReference1590150468\",\n        \"description\": \"description for transaction\",\n        \"orderItems\": [\n            {\n                \"reference\": \"P1\",\n                \"name\": \"Product1\",\n                \"type\": \"PRODUCT\",\n                \"class\": \"ProductGroup1\",\n                \"itemUrl\": \"https://www.demoshop.com/shop/id=666\",\n                \"imageUrl\": \"https://www.demoshop.com/product1.jpg\",\n                \"description\": \"Product 1 description\",\n                \"discountDescription\": \"Volume discount\",\n                \"quantity\": 2,\n                \"quantityUnit\": \"pcs\",\n                \"unitPrice\": 2500,\n                \"discountPrice\": 0,\n                \"vatPercent\": 0,\n                \"amount\": 5000,\n                \"vatAmount\": 0\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.externalintegration.payex.com/psp/paymentorders/9e5f1015-8c99-4b36-2eef-08d7fe4afa97/reversals",
									"protocol": "https",
									"host": [
										"api",
										"externalintegration",
										"payex",
										"com"
									],
									"path": [
										"psp",
										"paymentorders",
										"9e5f1015-8c99-4b36-2eef-08d7fe4afa97",
										"reversals"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/8.5"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Fri, 22 May 2020 12:27:49 GMT"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=16070400; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "{\n    \"payment\": \"/psp/creditcard/payments/a6d69a75-d2a3-4ab1-c244-08d7fe4b2efb\",\n    \"reversal\": {\n        \"id\": \"/psp/creditcard/payments/a6d69a75-d2a3-4ab1-c244-08d7fe4b2efb/reversals/a12acfb5-61ae-460c-2346-08d7fe4afe14\",\n        \"transaction\": {\n            \"id\": \"/psp/creditcard/payments/a6d69a75-d2a3-4ab1-c244-08d7fe4b2efb/transactions/a12acfb5-61ae-460c-2346-08d7fe4afe14\",\n            \"created\": \"2020-05-22T12:27:49.2383655Z\",\n            \"updated\": \"2020-05-22T12:27:49.444977Z\",\n            \"type\": \"Reversal\",\n            \"state\": \"Completed\",\n            \"number\": 40101653482,\n            \"amount\": 5000,\n            \"vatAmount\": 0,\n            \"description\": \"description for transaction\",\n            \"payeeReference\": \"someUniqueReference1590150468\",\n            \"isOperational\": false,\n            \"operations\": []\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get paymentOrder (verify reversalOK and proceed)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9600b838-83fe-4e54-991b-bfb4e71e5d71",
								"exec": [
									"responseCode = pm.response.code;\r",
									"responseBody = pm.response.json();\r",
									"\r",
									"if (responseCode >= 200 && responseCode < 300) {\r",
									"    const operations = responseBody.operations;\r",
									"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
									"    const seamlessPayment = operations.find(operations => operations.rel === \"view-paymenOrder\");\r",
									"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
									"    const capturePayment = operations.find(operations => operations.rel === \"create-paymentorder-capture\");\r",
									"    const cancelPayment = operations.find(operations => operations.rel === \"create-paymentorder-cancel\");\r",
									"    const reversePayment = operations.find(operations => operations.rel === \"create-paymentorder-reversal\");\r",
									"    const paidPayment = operations.find(operations => operations.rel === \"paid-paymentOrder\");\r",
									"    // Use data to populate immediately relevant data to continue flow.\r",
									"    if (!paidPayment) {                                                                            // These will only be set if the operation is found\r",
									"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
									"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
									"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
									"    }\r",
									"    else\r",
									"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
									"\r",
									"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
									"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
									"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{merchantToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}{{paymentId}}?$expand=currentPayment",
							"host": [
								"{{baseUrl}}{{paymentId}}"
							],
							"query": [
								{
									"key": "$expand",
									"value": "currentPayment"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get paymentOrder",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.externalintegration.payex.com/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3",
									"protocol": "https",
									"host": [
										"api",
										"externalintegration",
										"payex",
										"com"
									],
									"path": [
										"psp",
										"paymentorders",
										"abcf1b37-6cf5-49a2-1392-08d7fe4a79b3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/8.5"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Fri, 22 May 2020 12:21:21 GMT"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=16070400; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "{\n    \"paymentOrder\": {\n        \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3\",\n        \"created\": \"2020-05-22T12:20:48.8045871Z\",\n        \"updated\": \"2020-05-22T12:21:07.2297997Z\",\n        \"operation\": \"Purchase\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"amount\": 10000,\n        \"vatAmount\": 0,\n        \"remainingReversalAmount\": 10000,\n        \"orderItems\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/orderitems\"\n        },\n        \"description\": \"test description\",\n        \"initiatingSystemUserAgent\": \"Mozilla/5.0\",\n        \"userAgent\": \"Mozilla/5.0\",\n        \"language\": \"sv-SE\",\n        \"urls\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/payeeInfo\"\n        },\n        \"payments\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/payments\"\n        },\n        \"currentPayment\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/currentpayment\"\n        },\n        \"items\": [\n            {\n                \"creditCard\": {\n                    \"cardBrands\": [\n                        \"Visa\",\n                        \"MasterCard\",\n                        \"Amex\",\n                        \"Dankort\",\n                        \"Diners\",\n                        \"Finax\",\n                        \"Forbrugsforeningen\",\n                        \"Jcb\",\n                        \"IkanoFinansDk\",\n                        \"Lindex\",\n                        \"Maestro\",\n                        \"Ica\"\n                    ]\n                }\n            }\n        ]\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/reversals\",\n            \"rel\": \"create-paymentorder-reversal\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/486721ed-2acb-4c2b-bb24-08d7fe4a9a27/reversals\",\n            \"rel\": \"create-reversal\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/swish/core/scripts/client/px.swish.client.js?token=f9e9782a59ba56bbc496ab85c6e2aacdd06a3a89acf89e2a89267b3b4b1eb07d&Culture=sv-SE\",\n            \"rel\": \"view-payment\",\n            \"contentType\": \"application/javascript\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/paid\",\n            \"rel\": \"paid-paymentorder\",\n            \"contentType\": \"application/json\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Cancel paymentOrder",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{merchantToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transaction\": {\n        \"description\": \"Test Cancellation\",\n        \"payeeReference\": \"{{payeeReference}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{operationcancelPayment}}",
							"host": [
								"{{operationcancelPayment}}"
							]
						}
					},
					"response": [
						{
							"name": "Cancel paymentOrder",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"description\": \"Test Cancellation\",\n        \"payeeReference\": \"someUniqueReference1590150614\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.externalintegration.payex.com/psp/paymentorders/47b42487-3dda-448d-2ef1-08d7fe4afa97/cancellations",
									"protocol": "https",
									"host": [
										"api",
										"externalintegration",
										"payex",
										"com"
									],
									"path": [
										"psp",
										"paymentorders",
										"47b42487-3dda-448d-2ef1-08d7fe4afa97",
										"cancellations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/8.5"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Fri, 22 May 2020 12:30:15 GMT"
								},
								{
									"key": "Content-Length",
									"value": "641"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=16070400; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "{\n    \"payment\": \"/psp/creditcard/payments/9ed542fd-37a4-474e-c248-08d7fe4b2efb\",\n    \"cancellation\": {\n        \"id\": \"/psp/creditcard/payments/9ed542fd-37a4-474e-c248-08d7fe4b2efb/cancellations/d2101567-2e77-4fc2-234c-08d7fe4afe14\",\n        \"transaction\": {\n            \"id\": \"/psp/creditcard/payments/9ed542fd-37a4-474e-c248-08d7fe4b2efb/transactions/d2101567-2e77-4fc2-234c-08d7fe4afe14\",\n            \"created\": \"2020-05-22T12:30:15.6323618Z\",\n            \"updated\": \"2020-05-22T12:30:15.6777095Z\",\n            \"type\": \"Cancellation\",\n            \"state\": \"Completed\",\n            \"number\": 40101653501,\n            \"amount\": 5000,\n            \"vatAmount\": 0,\n            \"description\": \"Test Cancellation\",\n            \"payeeReference\": \"someUniqueReference1590150614\",\n            \"isOperational\": false,\n            \"operations\": []\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get paymentOrder (verify cancel OK)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c4434b70-9850-4467-b1d5-fce6e3ef8268",
								"exec": [
									"responseCode = pm.response.code;\r",
									"responseBody = pm.response.json();\r",
									"\r",
									"if (responseCode >= 200 && responseCode < 300) {\r",
									"    const operations = responseBody.operations;\r",
									"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
									"    const seamlessPayment = operations.find(operations => operations.rel === \"view-paymenOrder\");\r",
									"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
									"    const capturePayment = operations.find(operations => operations.rel === \"create-paymentorder-capture\");\r",
									"    const cancelPayment = operations.find(operations => operations.rel === \"create-paymentorder-cancel\");\r",
									"    const reversePayment = operations.find(operations => operations.rel === \"create-paymentorder-reversal\");\r",
									"    const paidPayment = operations.find(operations => operations.rel === \"paid-paymentOrder\");\r",
									"    // Use data to populate immediately relevant data to continue flow.\r",
									"    if (!paidPayment) {                                                                            // These will only be set if the operation is found\r",
									"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
									"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
									"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
									"    }\r",
									"    else\r",
									"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
									"\r",
									"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
									"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
									"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{merchantToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}{{paymentId}}?$expand=currentPayment",
							"host": [
								"{{baseUrl}}{{paymentId}}"
							],
							"query": [
								{
									"key": "$expand",
									"value": "currentPayment"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get paymentOrder",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.externalintegration.payex.com/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3",
									"protocol": "https",
									"host": [
										"api",
										"externalintegration",
										"payex",
										"com"
									],
									"path": [
										"psp",
										"paymentorders",
										"abcf1b37-6cf5-49a2-1392-08d7fe4a79b3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/8.5"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Fri, 22 May 2020 12:21:21 GMT"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=16070400; includeSubDomains"
								}
							],
							"cookie": [],
							"body": "{\n    \"paymentOrder\": {\n        \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3\",\n        \"created\": \"2020-05-22T12:20:48.8045871Z\",\n        \"updated\": \"2020-05-22T12:21:07.2297997Z\",\n        \"operation\": \"Purchase\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"amount\": 10000,\n        \"vatAmount\": 0,\n        \"remainingReversalAmount\": 10000,\n        \"orderItems\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/orderitems\"\n        },\n        \"description\": \"test description\",\n        \"initiatingSystemUserAgent\": \"Mozilla/5.0\",\n        \"userAgent\": \"Mozilla/5.0\",\n        \"language\": \"sv-SE\",\n        \"urls\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/payeeInfo\"\n        },\n        \"payments\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/payments\"\n        },\n        \"currentPayment\": {\n            \"id\": \"/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/currentpayment\"\n        },\n        \"items\": [\n            {\n                \"creditCard\": {\n                    \"cardBrands\": [\n                        \"Visa\",\n                        \"MasterCard\",\n                        \"Amex\",\n                        \"Dankort\",\n                        \"Diners\",\n                        \"Finax\",\n                        \"Forbrugsforeningen\",\n                        \"Jcb\",\n                        \"IkanoFinansDk\",\n                        \"Lindex\",\n                        \"Maestro\",\n                        \"Ica\"\n                    ]\n                }\n            }\n        ]\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/reversals\",\n            \"rel\": \"create-paymentorder-reversal\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/486721ed-2acb-4c2b-bb24-08d7fe4a9a27/reversals\",\n            \"rel\": \"create-reversal\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/swish/core/scripts/client/px.swish.client.js?token=f9e9782a59ba56bbc496ab85c6e2aacdd06a3a89acf89e2a89267b3b4b1eb07d&Culture=sv-SE\",\n            \"rel\": \"view-payment\",\n            \"contentType\": \"application/javascript\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/paymentorders/abcf1b37-6cf5-49a2-1392-08d7fe4a79b3/paid\",\n            \"rel\": \"paid-paymentorder\",\n            \"contentType\": \"application/json\"\n        }\n    ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Payment Pages",
			"item": [
				{
					"name": "Card",
					"item": [
						{
							"name": "create payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "28b9ebe8-fa3a-47af-a1b1-a7366b3f2b74",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    // Finding the values to set to globals\r",
											"    const paymentId = responseBody.payment.id;\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel.startsWith(\"direct-\"));\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-authorization\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    pm.environment.set(\"paymentId\", paymentId);\r",
											"    pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\"); // These will only be set if the operation is found\r",
											"    pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"    pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"    pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\"); // when trying to use N/A data.\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"payment\": {\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"currency\": \"{{currency}}\",\n        \"prices\": [\n            {\n                \"type\": \"CreditCard\",\n                \"amount\": 10000,\n                \"vatAmount\": 0\n            }\n        ],\n        \"description\": \"{{description}}\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"{{language}}\",\n        \"urls\": {\n        \t\"hostUrls\": [\n        \t\t\"{{hostUrl}}\"\n    \t\t],\n            \"completeUrl\": \"{{completeUrl}}\",\n            \"cancelUrl\": \"{{cancelUrl}}\",\n            \"callbackUrl\": \"{{callbackUrl}}\",\n            \"termsOfServiceUrl\": \"{{ToSUrl}}\",\n            \"logoUrl\": \"{{logoUrl}}\"\n        },\n        \"payeeInfo\": {\n            \"payeeId\": \"{{merchantId}}\",\n            \"payeeReference\": \"{{payeeReference}}\",\n            \"payeeName\": \"{{merchantName}}\"\n        }\n    },\n    \"creditCard\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/psp/creditcard/payments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"psp",
										"creditcard",
										"payments"
									]
								}
							},
							"response": [
								{
									"name": "Create Payment",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"payment\": {\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"currency\": \"SEK\",\n        \"prices\": [\n            {\n                \"type\": \"CreditCard\",\n                \"amount\": 10000,\n                \"vatAmount\": 0\n            }\n        ],\n        \"description\": \"my description\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"urls\": {\n            \"completeUrl\": \"https://en.wikipedia.org/wiki/Success\",\n            \"cancelUrl\": \"https://en.wikipedia.org/wiki/Cancel\",\n            \"callbackUrl\": \"https://en.wikipedia.org/wiki/Callback\",\n            \"termsOfServiceUrl\": \"https://en.wikipedia.org/wiki/Terms_Of_Service\",\n            \"logoUrl\": \"https://design.swedbankpay.com/v/4.5.0/img/swedbankpay-logo.svg\"\n        },\n        \"payeeInfo\": {\n            \"payeeId\": \"734310b0-f9b5-48ea-b730-b3628d907f0c\",\n            \"payeeReference\": \"someUniquereference{{$timestamp}}\",\n            \"payeeName\": \"test merchant\"\n        }\n    },\n    \"creditCard\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/creditcard/payments",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"creditcard",
												"payments"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n    \"payment\": {\r\n        \"id\": \"/psp/creditcard/payments/9464c3b2-6b2f-4b9e-d17a-08d7f7288268\",\r\n        \"number\": 40101602179,\r\n        \"created\": \"2020-05-13T12:13:56.5849776Z\",\r\n        \"updated\": \"2020-05-13T12:13:57.3064138Z\",\r\n        \"instrument\": \"CreditCard\",\r\n        \"operation\": \"Purchase\",\r\n        \"intent\": \"Authorization\",\r\n        \"state\": \"Ready\",\r\n        \"currency\": \"SEK\",\r\n        \"prices\": {\r\n            \"id\": \"/psp/creditcard/payments/9464c3b2-6b2f-4b9e-d17a-08d7f7288268/prices\"\r\n        },\r\n        \"amount\": 0,\r\n        \"description\": \"test description\",\r\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\r\n        \"userAgent\": \"Mozilla/5.0 Postman\",\r\n        \"language\": \"sv-SE\",\r\n        \"urls\": {\r\n            \"id\": \"/psp/creditcard/payments/9464c3b2-6b2f-4b9e-d17a-08d7f7288268/urls\"\r\n        },\r\n        \"payeeInfo\": {\r\n            \"id\": \"/psp/creditcard/payments/9464c3b2-6b2f-4b9e-d17a-08d7f7288268/payeeinfo\"\r\n        },\r\n        \"metadata\": {\r\n            \"id\": \"/psp/creditcard/payments/9464c3b2-6b2f-4b9e-d17a-08d7f7288268/metadata\"\r\n        }\r\n    },\r\n    \"operations\": [\r\n        {\r\n            \"method\": \"PATCH\",\r\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/9464c3b2-6b2f-4b9e-d17a-08d7f7288268\",\r\n            \"rel\": \"update-payment-abort\",\r\n            \"contentType\": \"application/json\"\r\n        },\r\n        {\r\n            \"method\": \"GET\",\r\n            \"href\": \"https://ecom.externalintegration.payex.com/creditcardv2/core/scripts/client/px.creditcard.client.js?token=8d7e74e1f4fca67a661b6874c6ca295a62eccf8902de7d8003b4de3dc48b80d2&operation=authorize\",\r\n            \"rel\": \"view-authorization\",\r\n            \"contentType\": \"application/javascript\"\r\n        },\r\n        {\r\n            \"method\": \"GET\",\r\n            \"href\": \"https://ecom.externalintegration.payex.com/creditcardv2/payments/authorize/8d7e74e1f4fca67a661b6874c6ca295a62eccf8902de7d8003b4de3dc48b80d2\",\r\n            \"rel\": \"redirect-authorization\",\r\n            \"contentType\": \"text/html\"\r\n        },\r\n        {\r\n            \"method\": \"GET\",\r\n            \"href\": \"https://ecom.externalintegration.payex.com/creditcardv2/core/scripts/client/px.creditcard.client.js?token=8d7e74e1f4fca67a661b6874c6ca295a62eccf8902de7d8003b4de3dc48b80d2\",\r\n            \"rel\": \"view-payment\",\r\n            \"contentType\": \"application/javascript\"\r\n        }\r\n    ]\r\n}"
								}
							]
						},
						{
							"name": "Authorize payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13424431-2c9b-47a9-840c-7842faa48210",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    // Finding the values to set to globals\r",
											"    const transactionId = responseBody.authorization.id;\r",
											"    const authorization = responseBody.authorization;\r",
											"    const paymentToken = authorization.paymentToken ? authorization.paymentToken : undefined;\r",
											"    const recurrenceToken = authorization.paymentToken ? authorization.recurrenceToken : undefined;\r",
											"    if(paymentToken)\r",
											"        pm.environment.set(\"paymentToken\", paymentToken);\r",
											"    if(recurrenceToken)\r",
											"        pm.environment.set(\"recurrenceToken\", recurrenceToken);\r",
											"    \r",
											"    pm.environment.set(\"transactionId\", transactionId);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"cardNumber\": \"{{cardPan}}\",\n        \"cardExpiryMonth\": \"{{cardExpiryMonth}}\",\n        \"cardExpiryYear\": \"{{cardExpiryYear}}\",\n        \"cardVerificationCode\": \"{{cardCvc}}\",\n        \"cardholderName\": \"{{consumerName}}\",\n        \"chosenCoBrand\": \"{{chosenCoBrand}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationDirectPayment}}",
									"host": [
										"{{operationDirectPayment}}"
									]
								}
							},
							"response": [
								{
									"name": "Authorize payment",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transaction\": {\n        \"cardNumber\": \"4925000000000004\",\n        \"cardExpiryMonth\": \"12\",\n        \"cardExpiryYear\": \"32\",\n        \"cardVerificationCode\": \"123\",\n        \"cardholderName\": \"Azra Oliveira\",\n        \"chosenCoBrand\": \"visa\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/creditcard/confined/payments/b73fc552-7d78-47e3-b2fa-08d7f727ce7b/authorizations",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"creditcard",
												"confined",
												"payments",
												"b73fc552-7d78-47e3-b2fa-08d7f727ce7b",
												"authorizations"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/creditcard/payments/b73fc552-7d78-47e3-b2fa-08d7f727ce7b\",\n    \"authorization\": {\n        \"direct\": true,\n        \"cardBrand\": \"Visa\",\n        \"cardType\": \"Credit\",\n        \"maskedPan\": \"492500******0004\",\n        \"expiryDate\": \"12/2022\",\n        \"panToken\": \"eb488c77-8118-4c9f-b3b3-ff134936df64\",\n        \"panEnrolled\": false,\n        \"issuerAuthorizationApprovalCode\": \"L73451\",\n        \"acquirerTransactionType\": \"SSL\",\n        \"acquirerStan\": \"73451\",\n        \"acquirerTerminalId\": \"59\",\n        \"acquirerTransactionTime\": \"2020-05-13T14:18:39Z\",\n        \"nonPaymentToken\": \"ed4683a8-6d2a-4a14-b065-746a41316b8f\",\n        \"id\": \"/psp/creditcard/payments/b73fc552-7d78-47e3-b2fa-08d7f727ce7b/authorizations/e8c1cf1b-ffb4-49ac-adb7-08d7f727d5b2\",\n        \"transaction\": {\n            \"id\": \"/psp/creditcard/payments/b73fc552-7d78-47e3-b2fa-08d7f727ce7b/transactions/e8c1cf1b-ffb4-49ac-adb7-08d7f727d5b2\",\n            \"created\": \"2020-05-13T12:18:37.7506651Z\",\n            \"updated\": \"2020-05-13T12:18:38.9079122Z\",\n            \"type\": \"Authorization\",\n            \"state\": \"Completed\",\n            \"number\": 40101602211,\n            \"amount\": 10000,\n            \"vatAmount\": 0,\n            \"description\": \"test description\",\n            \"payeeReference\": \"someUniqueReference1589372298\",\n            \"isOperational\": false,\n            \"operations\": [\n                {\n                    \"method\": \"PATCH\",\n                    \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/b73fc552-7d78-47e3-b2fa-08d7f727ce7b/authorizations/e8c1cf1b-ffb4-49ac-adb7-08d7f727d5b2\",\n                    \"rel\": \"update-authorization-overchargedamount\"\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get payment (verify authorize OK and proceed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "050930bd-66d9-4610-bfad-7da93e6c84c6",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel.startsWith(\"direct-\"));\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=authorizations",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "authorizations"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"creditcard",
												"payments",
												"ff9c526c-b4b4-4906-b2fe-08d7f727ce7b"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Wed, 13 May 2020 12:20:43 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b\",\n        \"number\": 40101602222,\n        \"created\": \"2020-05-13T12:19:49.3309133Z\",\n        \"updated\": \"2020-05-13T12:20:09.364571Z\",\n        \"instrument\": \"CreditCard\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"prices\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/prices\"\n        },\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 8999,\n        \"remainingCancellationAmount\": 8999,\n        \"remainingReversalAmount\": 1001,\n        \"description\": \"test description\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"transactions\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/authorizations\"\n        },\n        \"captures\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/captures\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/cancellations\",\n            \"rel\": \"create-cancellation\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/captures\",\n            \"rel\": \"create-capture\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/reversals\",\n            \"rel\": \"create-reversal\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/paid\",\n            \"rel\": \"paid-payment\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/creditcardv2/core/scripts/client/px.creditcard.client.js?token=86c4c7b1e3bd60d08f66182dd8abec4f4591ac4bbe57c2d9c804dcc6aa0e4aa1\",\n            \"rel\": \"view-payment\",\n            \"contentType\": \"application/javascript\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Capture payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"amount\": 1001,\n        \"vatAmount\": 0,\n        \"description\": \"your description\",\n        \"payeeReference\": \"{{payeeReference}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationcapturePayment}}",
									"host": [
										"{{operationcapturePayment}}"
									]
								}
							},
							"response": [
								{
									"name": "Capture payment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transaction\": {\n        \"amount\": 1001,\n        \"vatAmount\": 0,\n        \"description\": \"your description\",\n        \"payeeReference\": \"someUniqueReference1589372406\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/captures",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"creditcard",
												"payments",
												"ff9c526c-b4b4-4906-b2fe-08d7f727ce7b",
												"captures"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/captures/1ac1460d-d53d-4dfe-adbc-08d7f727d5b2"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Wed, 13 May 2020 12:20:09 GMT"
										},
										{
											"key": "Content-Length",
											"value": "625"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b\",\n    \"capture\": {\n        \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/captures/1ac1460d-d53d-4dfe-adbc-08d7f727d5b2\",\n        \"transaction\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/transactions/1ac1460d-d53d-4dfe-adbc-08d7f727d5b2\",\n            \"created\": \"2020-05-13T12:20:08.9487719Z\",\n            \"updated\": \"2020-05-13T12:20:09.3645714Z\",\n            \"type\": \"Capture\",\n            \"state\": \"Completed\",\n            \"number\": 40101602224,\n            \"amount\": 1001,\n            \"vatAmount\": 0,\n            \"description\": \"your description\",\n            \"payeeReference\": \"someUniqueReference1589372406\",\n            \"isOperational\": false,\n            \"operations\": []\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get payment (verify capture OK and proceed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c56e3c9e-6cde-43c6-a8cb-6e8540601008",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel.startsWith(\"direct-\"));\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=captures",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "captures"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"creditcard",
												"payments",
												"ff9c526c-b4b4-4906-b2fe-08d7f727ce7b"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Wed, 13 May 2020 12:20:43 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b\",\n        \"number\": 40101602222,\n        \"created\": \"2020-05-13T12:19:49.3309133Z\",\n        \"updated\": \"2020-05-13T12:20:09.364571Z\",\n        \"instrument\": \"CreditCard\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"prices\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/prices\"\n        },\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 8999,\n        \"remainingCancellationAmount\": 8999,\n        \"remainingReversalAmount\": 1001,\n        \"description\": \"test description\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"transactions\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/authorizations\"\n        },\n        \"captures\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/captures\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/cancellations\",\n            \"rel\": \"create-cancellation\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/captures\",\n            \"rel\": \"create-capture\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/reversals\",\n            \"rel\": \"create-reversal\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/paid\",\n            \"rel\": \"paid-payment\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/creditcardv2/core/scripts/client/px.creditcard.client.js?token=86c4c7b1e3bd60d08f66182dd8abec4f4591ac4bbe57c2d9c804dcc6aa0e4aa1\",\n            \"rel\": \"view-payment\",\n            \"contentType\": \"application/javascript\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Reverse payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"amount\": 1001,\n        \"vatAmount\": 0,\n        \"description\": \"your description\",\n        \"payeeReference\": \"{{payeeReference}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationreversePayment}}",
									"host": [
										"{{operationreversePayment}}"
									]
								}
							},
							"response": [
								{
									"name": "Reverse payment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transaction\": {\n        \"amount\": 1001,\n        \"vatAmount\": 0,\n        \"description\": \"your description\",\n        \"payeeReference\": \"someUniqueReference1589372553\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/reversals",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"creditcard",
												"payments",
												"ff9c526c-b4b4-4906-b2fe-08d7f727ce7b",
												"reversals"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/reversals/046554f0-d65a-48ad-adc0-08d7f727d5b2"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Wed, 13 May 2020 12:22:35 GMT"
										},
										{
											"key": "Content-Length",
											"value": "628"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b\",\n    \"reversal\": {\n        \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/reversals/046554f0-d65a-48ad-adc0-08d7f727d5b2\",\n        \"transaction\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/transactions/046554f0-d65a-48ad-adc0-08d7f727d5b2\",\n            \"created\": \"2020-05-13T12:22:34.9398553Z\",\n            \"updated\": \"2020-05-13T12:22:35.4570425Z\",\n            \"type\": \"Reversal\",\n            \"state\": \"Completed\",\n            \"number\": 40101602233,\n            \"amount\": 1001,\n            \"vatAmount\": 0,\n            \"description\": \"your description\",\n            \"payeeReference\": \"someUniqueReference1589372553\",\n            \"isOperational\": false,\n            \"operations\": []\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get payment (verify reversal OK and proceed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "851fb01c-9860-45a3-95c4-50529aa0f00f",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel.startsWith(\"direct-\"));\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=reversals",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "reversals"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"creditcard",
												"payments",
												"ff9c526c-b4b4-4906-b2fe-08d7f727ce7b"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Wed, 13 May 2020 12:20:43 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b\",\n        \"number\": 40101602222,\n        \"created\": \"2020-05-13T12:19:49.3309133Z\",\n        \"updated\": \"2020-05-13T12:20:09.364571Z\",\n        \"instrument\": \"CreditCard\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"prices\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/prices\"\n        },\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 8999,\n        \"remainingCancellationAmount\": 8999,\n        \"remainingReversalAmount\": 1001,\n        \"description\": \"test description\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"transactions\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/authorizations\"\n        },\n        \"captures\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/captures\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/cancellations\",\n            \"rel\": \"create-cancellation\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/captures\",\n            \"rel\": \"create-capture\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/reversals\",\n            \"rel\": \"create-reversal\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/paid\",\n            \"rel\": \"paid-payment\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/creditcardv2/core/scripts/client/px.creditcard.client.js?token=86c4c7b1e3bd60d08f66182dd8abec4f4591ac4bbe57c2d9c804dcc6aa0e4aa1\",\n            \"rel\": \"view-payment\",\n            \"contentType\": \"application/javascript\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Cancel payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"description\": \"your description\",\n        \"payeeReference\": \"{{payeeReference}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationcancelPayment}}",
									"host": [
										"{{operationcancelPayment}}"
									]
								}
							},
							"response": [
								{
									"name": "Cancel payment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transaction\": {\n        \"description\": \"your description\",\n        \"payeeReference\": \"someUniqueReference1589372595\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/cancellations",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"creditcard",
												"payments",
												"ff9c526c-b4b4-4906-b2fe-08d7f727ce7b",
												"cancellations"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/cancellations/ae7bc7ae-3be4-42c1-1992-08d7f7285952"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Wed, 13 May 2020 12:23:18 GMT"
										},
										{
											"key": "Content-Length",
											"value": "640"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b\",\n    \"cancellation\": {\n        \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/cancellations/ae7bc7ae-3be4-42c1-1992-08d7f7285952\",\n        \"transaction\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/transactions/ae7bc7ae-3be4-42c1-1992-08d7f7285952\",\n            \"created\": \"2020-05-13T12:23:17.8910568Z\",\n            \"updated\": \"2020-05-13T12:23:18.5253673Z\",\n            \"type\": \"Cancellation\",\n            \"state\": \"Completed\",\n            \"number\": 40101602237,\n            \"amount\": 8999,\n            \"vatAmount\": 0,\n            \"description\": \"your description\",\n            \"payeeReference\": \"someUniqueReference1589372595\",\n            \"isOperational\": false,\n            \"operations\": []\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get payment (verify cancel ok)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d2f167bf-d8dd-4d98-ba1d-277fe8f2a6cb",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel.startsWith(\"direct-\"));\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=cancellations",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cancellations"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"creditcard",
												"payments",
												"ff9c526c-b4b4-4906-b2fe-08d7f727ce7b"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Wed, 13 May 2020 12:20:43 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b\",\n        \"number\": 40101602222,\n        \"created\": \"2020-05-13T12:19:49.3309133Z\",\n        \"updated\": \"2020-05-13T12:20:09.364571Z\",\n        \"instrument\": \"CreditCard\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"prices\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/prices\"\n        },\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 8999,\n        \"remainingCancellationAmount\": 8999,\n        \"remainingReversalAmount\": 1001,\n        \"description\": \"test description\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"transactions\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/authorizations\"\n        },\n        \"captures\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/captures\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/cancellations\",\n            \"rel\": \"create-cancellation\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/captures\",\n            \"rel\": \"create-capture\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/reversals\",\n            \"rel\": \"create-reversal\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/paid\",\n            \"rel\": \"paid-payment\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/creditcardv2/core/scripts/client/px.creditcard.client.js?token=86c4c7b1e3bd60d08f66182dd8abec4f4591ac4bbe57c2d9c804dcc6aa0e4aa1\",\n            \"rel\": \"view-payment\",\n            \"contentType\": \"application/javascript\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Credit Account",
					"item": [
						{
							"name": "create payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4cd5b77d-cf79-434e-941d-f1409176d17d",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    // Finding the values to set to globals\r",
											"    const paymentId = responseBody.payment.id;\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel === \"direct-\");\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-authorization\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    pm.environment.set(\"paymentId\", paymentId);\r",
											"    pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\"); // These will only be set if the operation is found\r",
											"    pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"    pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"    pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\"); // when trying to use N/A data.\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"payment\": {\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"currency\": \"{{currency}}\",\n        \"prices\": [\n            {\n                \"type\": \"CreditAccount\",\n                \"amount\": 10000,\n                \"vatAmount\": 0\n            }\n        ],\n        \"description\": \"{{description}}\",\n        \"payerReference\": \"AB1234\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"{{language}}\",\n        \"urls\": {\n        \t\"hostUrls\": [\n        \t\t\"{{hostUrl}}\"\n    \t\t],\n            \"completeUrl\": \"{{completeUrl}}\",\n            \"cancelUrl\": \"{{cancelUrl}}\",\n            \"callbackUrl\": \"{{callbackUrl}}\",\n            \"termsOfServiceUrl\": \"{{ToSUrl}}\",\n            \"logoUrl\": \"{{logoUrl}}\"\n        },\n        \"payeeInfo\": {\n            \"payeeId\": \"{{merchantId}}\",\n            \"payeeReference\": \"{{payeeReference}}\",\n            \"payeeName\": \"{{merchantName}}\"\n        }\n    },\n    \"creditAccount\": {\n    \t\"creditAccountType\": \"CreditAccount{{countryType}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/psp/creditaccount/payments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"psp",
										"creditaccount",
										"payments"
									]
								}
							},
							"response": [
								{
									"name": "create payment",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"payment\": {\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"currency\": \"SEK\",\n        \"prices\": [\n            {\n                \"type\": \"CreditAccount\",\n                \"amount\": 10000,\n                \"vatAmount\": 0\n            }\n        ],\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"urls\": {\n        \t\"hostUrls\": [\n        \t\t\"https://en.wikipedia.org/wiki/Host\"\n    \t\t],\n            \"completeUrl\": \"https://en.wikipedia.org/wiki/Success\",\n            \"cancelUrl\": \"https://en.wikipedia.org/wiki/Cancel\",\n            \"callbackUrl\": \"https://en.wikipedia.org/wiki/Callback\",\n            \"termsOfServiceUrl\": \"https://en.wikipedia.org/wiki/Terms_Of_Service\",\n            \"logoUrl\": \"https://design.swedbankpay.com/v/4.5.0/img/swedbankpay-logo.svg\"\n        },\n        \"payeeInfo\": {\n            \"payeeId\": \"734310b0-f9b5-48ea-b730-b3628d907f0c\",\n            \"payeeReference\": \"someUniquereference123897\",\n            \"payeeName\": \"test merchant\"\n        }\n    },\n    \"creditAccount\": {\n        \"creditAccountType\": \"CreditAccountSe\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psp/creditaccount/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psp",
												"creditaccount",
												"payments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Length",
											"value": "1502"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/creditaccount/payments/0c2d4589-cee6-4df1-e764-08d7fe3ba10c"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 10:33:56 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"id\": \"/psp/creditaccount/payments/0c2d4589-cee6-4df1-e764-08d7fe3ba10c\",\n        \"number\": 47100000873,\n        \"created\": \"2020-05-22T10:33:55.4669608Z\",\n        \"updated\": \"2020-05-22T10:33:55.8734408Z\",\n        \"instrument\": \"CreditAccount\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"prices\": {\n            \"id\": \"/psp/creditaccount/payments/0c2d4589-cee6-4df1-e764-08d7fe3ba10c/prices\"\n        },\n        \"amount\": 0,\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"urls\": {\n            \"id\": \"/psp/creditaccount/payments/0c2d4589-cee6-4df1-e764-08d7fe3ba10c/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/creditaccount/payments/0c2d4589-cee6-4df1-e764-08d7fe3ba10c/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/creditaccount/payments/0c2d4589-cee6-4df1-e764-08d7fe3ba10c/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"PATCH\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditaccount/payments/0c2d4589-cee6-4df1-e764-08d7fe3ba10c\",\n            \"rel\": \"update-payment-abort\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/creditaccount/payments/authorize/84fd6b87d21cef7abd8f32cc5edce9806660c0ec763dad67ad4f41f650b771bf\",\n            \"rel\": \"redirect-authorization\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/creditaccount/core/scripts/client/px.creditaccount.client.js?token=84fd6b87d21cef7abd8f32cc5edce9806660c0ec763dad67ad4f41f650b771bf&operation=authorize\",\n            \"rel\": \"view-authorization\",\n            \"contentType\": \"application/javascript\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get payment (verify authorization OK and proceed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3dd2c4da-9098-42cc-bb19-08c965c299f0",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel.startsWith(\"direct-\"));\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=authorizations",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "authorizations"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"creditaccount",
												"payments",
												"447b0cbb-a0cb-49e3-64ee-08d7fe3b6566"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Length",
											"value": "1879"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 10:51:22 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"approvedLegalAddress\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/approvedlegaladdress\"\n        },\n        \"maskedApprovedLegalAddress\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/maskedapprovedlegaladdress\"\n        },\n        \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566\",\n        \"number\": 47100000874,\n        \"created\": \"2020-05-22T10:50:56.3439141Z\",\n        \"updated\": \"2020-05-22T10:51:14.2386098Z\",\n        \"instrument\": \"CreditAccount\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"prices\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/prices\"\n        },\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 10000,\n        \"remainingCancellationAmount\": 10000,\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"transactions\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/authorizations\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/cancellations\",\n            \"rel\": \"create-cancellation\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/captures\",\n            \"rel\": \"create-capture\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/paid\",\n            \"rel\": \"paid-payment\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Capture payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"amount\": 1001,\n        \"vatAmount\": 0,\n        \"description\": \"your description\",\n        \"payeeReference\": \"{{payeeReference}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationcapturePayment}}",
									"host": [
										"{{operationcapturePayment}}"
									]
								}
							},
							"response": [
								{
									"name": "Capture payment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transaction\": {\n        \"amount\": 1001,\n        \"vatAmount\": 0,\n        \"description\": \"your description\",\n        \"payeeReference\": \"someUniqueReference1590144729\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/captures",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"creditaccount",
												"payments",
												"447b0cbb-a0cb-49e3-64ee-08d7fe3b6566",
												"captures"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/captures/f3390557-a735-4fc1-909e-08d7fe3e0ab1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 10:52:10 GMT"
										},
										{
											"key": "Content-Length",
											"value": "664"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566\",\n    \"capture\": {\n        \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/captures/f3390557-a735-4fc1-909e-08d7fe3e0ab1\",\n        \"transaction\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/transactions/f3390557-a735-4fc1-909e-08d7fe3e0ab1\",\n            \"created\": \"2020-05-22T10:52:09.9959603Z\",\n            \"updated\": \"2020-05-22T10:52:10.3758193Z\",\n            \"type\": \"Capture\",\n            \"state\": \"Completed\",\n            \"number\": 47100000877,\n            \"amount\": 1001,\n            \"vatAmount\": 0,\n            \"description\": \"your description\",\n            \"payeeReference\": \"someUniqueReference1590144729\",\n            \"isOperational\": false,\n            \"reconciliationNumber\": 737566,\n            \"operations\": []\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get payment (verify capture OK and proceed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bdbfaf88-e95e-455b-b215-d3cfbdc9a07a",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel.startsWith(\"direct-\"));\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=captures",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "captures"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"creditaccount",
												"payments",
												"447b0cbb-a0cb-49e3-64ee-08d7fe3b6566"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Length",
											"value": "1879"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 10:51:22 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"approvedLegalAddress\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/approvedlegaladdress\"\n        },\n        \"maskedApprovedLegalAddress\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/maskedapprovedlegaladdress\"\n        },\n        \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566\",\n        \"number\": 47100000874,\n        \"created\": \"2020-05-22T10:50:56.3439141Z\",\n        \"updated\": \"2020-05-22T10:51:14.2386098Z\",\n        \"instrument\": \"CreditAccount\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"prices\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/prices\"\n        },\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 10000,\n        \"remainingCancellationAmount\": 10000,\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"transactions\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/authorizations\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/cancellations\",\n            \"rel\": \"create-cancellation\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/captures\",\n            \"rel\": \"create-capture\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/paid\",\n            \"rel\": \"paid-payment\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Reverse payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"amount\": 1,\n        \"vatAmount\": 0,\n        \"description\": \"your description\",\n        \"payeeReference\": \"{{payeeReference}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationreversePayment}}",
									"host": [
										"{{operationreversePayment}}"
									]
								}
							},
							"response": [
								{
									"name": "Reverse payment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transaction\": {\n        \"amount\": 1,\n        \"vatAmount\": 0,\n        \"description\": \"your description\",\n        \"payeeReference\": \"someUniqueReference1590144848\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/reversals",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"creditaccount",
												"payments",
												"447b0cbb-a0cb-49e3-64ee-08d7fe3b6566",
												"reversals"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Length",
											"value": "664"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/reversals/e76ef155-c9c3-4a40-909f-08d7fe3e0ab1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 10:54:09 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566\",\n    \"reversal\": {\n        \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/reversals/e76ef155-c9c3-4a40-909f-08d7fe3e0ab1\",\n        \"transaction\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/transactions/e76ef155-c9c3-4a40-909f-08d7fe3e0ab1\",\n            \"created\": \"2020-05-22T10:54:09.4955705Z\",\n            \"updated\": \"2020-05-22T10:54:09.9142155Z\",\n            \"type\": \"Reversal\",\n            \"state\": \"Completed\",\n            \"number\": 47100000878,\n            \"amount\": 1,\n            \"vatAmount\": 0,\n            \"description\": \"your description\",\n            \"payeeReference\": \"someUniqueReference1590144848\",\n            \"isOperational\": false,\n            \"reconciliationNumber\": 737566,\n            \"operations\": []\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get payment (verify reversal OK and proceed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ede1fa6-cc09-487d-86ab-c9618016e0f2",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel.startsWith(\"direct-\"));\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=reversals",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "reversals"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"creditaccount",
												"payments",
												"447b0cbb-a0cb-49e3-64ee-08d7fe3b6566"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Length",
											"value": "1879"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 10:51:22 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"approvedLegalAddress\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/approvedlegaladdress\"\n        },\n        \"maskedApprovedLegalAddress\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/maskedapprovedlegaladdress\"\n        },\n        \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566\",\n        \"number\": 47100000874,\n        \"created\": \"2020-05-22T10:50:56.3439141Z\",\n        \"updated\": \"2020-05-22T10:51:14.2386098Z\",\n        \"instrument\": \"CreditAccount\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"prices\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/prices\"\n        },\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 10000,\n        \"remainingCancellationAmount\": 10000,\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"transactions\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/authorizations\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/cancellations\",\n            \"rel\": \"create-cancellation\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/captures\",\n            \"rel\": \"create-capture\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/paid\",\n            \"rel\": \"paid-payment\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Cancel payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"description\": \"your description\",\n        \"payeeReference\": \"{{payeeReference}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationcancelPayment}}",
									"host": [
										"{{operationcancelPayment}}"
									]
								}
							},
							"response": [
								{
									"name": "Cancel payment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transaction\": {\n        \"description\": \"your description\",\n        \"payeeReference\": \"someUniqueReference1590144900\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"creditaccount",
												"payments",
												"447b0cbb-a0cb-49e3-64ee-08d7fe3b6566"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Length",
											"value": "649"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/cancellations/a52273cc-55f1-4655-90a0-08d7fe3e0ab1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 10:55:00 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566\",\n    \"cancellation\": {\n        \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/cancellations/a52273cc-55f1-4655-90a0-08d7fe3e0ab1\",\n        \"transaction\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/transactions/a52273cc-55f1-4655-90a0-08d7fe3e0ab1\",\n            \"created\": \"2020-05-22T10:55:00.9439595Z\",\n            \"updated\": \"2020-05-22T10:55:01.2769449Z\",\n            \"type\": \"Cancellation\",\n            \"state\": \"Completed\",\n            \"number\": 47100000879,\n            \"amount\": 8999,\n            \"vatAmount\": 0,\n            \"description\": \"your description\",\n            \"payeeReference\": \"someUniqueReference1590144900\",\n            \"isOperational\": false,\n            \"operations\": []\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get payment (verify cancel OK)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9bd91dc5-21e5-473e-946c-28d03a1bc91c",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel.startsWith(\"direct-\"));\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=cancellations",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cancellations"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"creditaccount",
												"payments",
												"447b0cbb-a0cb-49e3-64ee-08d7fe3b6566"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Length",
											"value": "1879"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 10:51:22 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"approvedLegalAddress\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/approvedlegaladdress\"\n        },\n        \"maskedApprovedLegalAddress\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/maskedapprovedlegaladdress\"\n        },\n        \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566\",\n        \"number\": 47100000874,\n        \"created\": \"2020-05-22T10:50:56.3439141Z\",\n        \"updated\": \"2020-05-22T10:51:14.2386098Z\",\n        \"instrument\": \"CreditAccount\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"prices\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/prices\"\n        },\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 10000,\n        \"remainingCancellationAmount\": 10000,\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"transactions\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/authorizations\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/cancellations\",\n            \"rel\": \"create-cancellation\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/captures\",\n            \"rel\": \"create-capture\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/creditaccount/payments/447b0cbb-a0cb-49e3-64ee-08d7fe3b6566/paid\",\n            \"rel\": \"paid-payment\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Invoice",
					"item": [
						{
							"name": "create payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f236c544-ba1f-4e69-935d-ef89a38c4873",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    // Finding the values to set to globals\r",
											"    const paymentId = responseBody.payment.id;\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel === \"create-authorization\");\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-authorization\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const approveLegalAddress = operations.find(operations => operations.rel.includes(\"legal-address\"));\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    pm.environment.set(\"paymentId\", paymentId);\r",
											"    pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\"); // These will only be set if the operation is found\r",
											"    pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"    pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"    pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\"); // when trying to use N/A data.\r",
											"    pm.globals.set(\"operationApproveLegalAddress\", approveLegalAddress ? approveLegalAddress.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"payment\": {\n        \"operation\": \"FinancingConsumer\",\n        \"intent\": \"Authorization\",\n        \"currency\": \"{{currency}}\",\n        \"prices\": [\n            {\n                \"type\": \"Invoice\",\n                \"amount\": 10000,\n                \"vatAmount\": 0\n            }\n        ],\n        \"description\": \"{{description}}\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"{{language}}\",\n        \"urls\": {\n        \t\"hostUrls\": [\n        \t\t\"{{hostUrl}}\"\n    \t\t],\n            \"completeUrl\": \"{{completeUrl}}\",\n            \"cancelUrl\": \"{{cancelUrl}}\",\n            \"callbackUrl\": \"{{callbackUrl}}\",\n            \"termsOfServiceUrl\": \"{{ToSUrl}}\",\n            \"logoUrl\": \"{{logoUrl}}\"\n        },\n        \"payeeInfo\": {\n            \"payeeId\": \"{{merchantId}}\",\n            \"payeeReference\": \"{{payeeReference}}\",\n            \"payeeName\": \"{{merchantName}}\"\n        }\n    },\n    \"invoice\": {\n    \t\"invoiceType\": \"PayExFinancing{{countryType}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/psp/invoice/payments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"psp",
										"invoice",
										"payments"
									]
								}
							},
							"response": [
								{
									"name": "create payment",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"payment\": {\n        \"operation\": \"FinancingConsumer\",\n        \"intent\": \"Authorization\",\n        \"currency\": \"SEK\",\n        \"prices\": [\n            {\n                \"type\": \"Invoice\",\n                \"amount\": 10000,\n                \"vatAmount\": 0\n            }\n        ],\n        \"description\": \"test description\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"urls\": {\n        \t\"hostUrls\": [\n        \t\t\"https://en.wikipedia.org/wiki/Host\"\n    \t\t],\n            \"completeUrl\": \"https://en.wikipedia.org/wiki/Success\",\n            \"cancelUrl\": \"https://en.wikipedia.org/wiki/cancel\",\n            \"callbackUrl\": \"https://en.wikipedia.org/wiki/callback\",\n            \"termsOfServiceUrl\": \"https://en.wikipedia.org/wiki/Terms_Of_Service\",\n            \"logoUrl\": \"https://design.swedbankpay.com/v/4.5.0/img/swedbankpay-logo.svg\"\n        },\n        \"payeeInfo\": {\n            \"payeeId\": \"cdff105b-1879-4d10-a83b-7bd7115cffef\",\n            \"payeeReference\": \"someUniqueReference123894723\",\n            \"payeeName\": \"Test merchant\"\n        }\n    },\n    \"invoice\": {\n    \t\"invoiceType\": \"PayExFinancingSe\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/invoice/payments",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"invoice",
												"payments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/invoice/payments/9ecebbe2-cbfe-442b-7f8b-08d7fcb653b9"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 08:45:41 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1907"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"id\": \"/psp/invoice/payments/9ecebbe2-cbfe-442b-7f8b-08d7fcb653b9\",\n        \"number\": 41100171179,\n        \"created\": \"2020-05-22T08:45:42.8097921Z\",\n        \"updated\": \"2020-05-22T08:45:42.5986248Z\",\n        \"instrument\": \"Invoice\",\n        \"operation\": \"FinancingConsumer\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"prices\": {\n            \"id\": \"/psp/invoice/payments/9ecebbe2-cbfe-442b-7f8b-08d7fcb653b9/prices\"\n        },\n        \"amount\": 0,\n        \"description\": \"test description\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"urls\": {\n            \"id\": \"/psp/invoice/payments/9ecebbe2-cbfe-442b-7f8b-08d7fcb653b9/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/invoice/payments/9ecebbe2-cbfe-442b-7f8b-08d7fcb653b9/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/invoice/payments/9ecebbe2-cbfe-442b-7f8b-08d7fcb653b9/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/9ecebbe2-cbfe-442b-7f8b-08d7fcb653b9/approvedlegaladdress\",\n            \"rel\": \"create-approved-legal-address\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/9ecebbe2-cbfe-442b-7f8b-08d7fcb653b9/authorizations\",\n            \"rel\": \"create-authorization\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"PATCH\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/9ecebbe2-cbfe-442b-7f8b-08d7fcb653b9\",\n            \"rel\": \"update-payment-abort\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/invoice/payments/authorize/94458274928fdcc90994f9b81849e78051f5a6c29329e3b933184812cf23e7f3\",\n            \"rel\": \"redirect-authorization\",\n            \"contentType\": \"text/html\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/invoice/core/scripts/client/px.invoice.client.js?token=94458274928fdcc90994f9b81849e78051f5a6c29329e3b933184812cf23e7f3&operation=authorize\",\n            \"rel\": \"view-authorization\",\n            \"contentType\": \"application/javascript\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Approve legal address",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "07ec402a-55e0-4a45-98c1-8508f4769eb3",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const approvedLegalAddress = responseBody.approvedLegalAddress;\r",
											"    const consumerAddress = approvedLegalAddress.streetAddress;\r",
											"    const consumerZipCode = approvedLegalAddress.zipCode;\r",
											"    const consumerCity = approvedLegalAddress.city;\r",
											"\r",
											"    pm.environment.set(\"consumerAddress\", consumerAddress);\r",
											"    pm.environment.set(\"consumerZipCode\", consumerZipCode);\r",
											"    pm.environment.set(\"consumerCity\", consumerCity);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "",
										"type": "text",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"addressee\": {\n        \"socialSecurityNumber\": \"{{consumerSSN}}\",\n        \"zipCode\": \"{{consumerZipCode}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationApproveLegalAddress}}",
									"host": [
										"{{operationApproveLegalAddress}}"
									]
								}
							},
							"response": [
								{
									"name": "Approve legal address",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "",
												"type": "text",
												"value": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"addressee\": {\n        \"socialSecurityNumber\": \"196003071161\",\n        \"zipCode\": \"19792\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/invoice/payments/4871cd1b-09ee-41b3-7f8d-08d7fcb653b9/approvedlegaladdress",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"invoice",
												"payments",
												"4871cd1b-09ee-41b3-7f8d-08d7fcb653b9",
												"approvedlegaladdress"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/invoice/payments/4871cd1b-09ee-41b3-7f8d-08d7fcb653b9/approvedlegaladdress"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 08:54:36 GMT"
										},
										{
											"key": "Content-Length",
											"value": "297"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/invoice/payments/4871cd1b-09ee-41b3-7f8d-08d7fcb653b9\",\n    \"approvedLegalAddress\": {\n        \"id\": \"/psp/invoice/payments/4871cd1b-09ee-41b3-7f8d-08d7fcb653b9/approvedlegaladdress\",\n        \"addressee\": \"Azra Oliveira\",\n        \"streetAddress\": \"Helgestavägen 9\",\n        \"zipCode\": \"19792\",\n        \"city\": \"Bro\",\n        \"countryCode\": \"SE\"\n    }\n}"
								}
							]
						},
						{
							"name": "Authorize payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7479c3e2-b8b9-4dd0-92a7-74d9b3421d52",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    // Finding the values to set to globals\r",
											"    const authorization = responseBody.authorization;\r",
											"    const transactionId = authorization.id;\r",
											"    const recurrenceToken = authorization.recurrenceToken ? authorization.recurrenceToken : undefined;\r",
											"    (recurrenceToken) ? pm.environment.set(\"recurrenceToken\", recurrenceToken) : console.log(\"no recurrence token created\");\r",
											"\r",
											"    pm.environment.set(\"transactionId\", transactionId);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"activity\": \"FinancingConsumer\"\n    },\n    \"consumer\": {\n        \"socialSecurityNumber\": \"{{consumerSSN}}\",\n        \"customerNumber\": \"123456\",\n        \"email\": \"{{consumerEmail}}\",\n        \"msisdn\": \"{{msisdn}}\",\n        \"ip\": \"127.0.0.1\"\n    },\n    \"legalAddress\": {\n        \"addressee\": \"{{consumerName}}\",\n        \"streetAddress\": \"{{consumerAdress}}\",\n        \"zipCode\": \"{{consumerZipCode}}\",\n        \"city\": \"{{consumerCity}}\",\n        \"countryCode\": \"{{countryCode}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationDirectPayment}}",
									"host": [
										"{{operationDirectPayment}}"
									]
								}
							},
							"response": [
								{
									"name": "Authorize payment",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transaction\": {\n        \"activity\": \"FinancingConsumer\"\n    },\n    \"consumer\": {\n        \"socialSecurityNumber\": \"196003071161\",\n        \"customerNumber\": \"123456\",\n        \"email\": \"azra.oliveira@payex.com\",\n        \"msisdn\": \"+46739000001\",\n        \"ip\": \"127.0.0.1\"\n    },\n    \"legalAddress\": {\n        \"addressee\": \"Azra Oliveira\",\n        \"streetAddress\": \"Helgestavägen 9\",\n        \"zipCode\": \"19792\",\n        \"city\": \"Bro\",\n        \"countryCode\": \"SE\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/authorizations",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"invoice",
												"payments",
												"d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9",
												"authorizations"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/authorizations/e374c4a4-6073-4f4c-7a57-08d7fcb6e19e"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 09:27:47 GMT"
										},
										{
											"key": "Content-Length",
											"value": "833"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9\",\n    \"authorization\": {\n        \"shippingAddress\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/shippingaddress\"\n        },\n        \"legalAddress\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/legaladdress\"\n        },\n        \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/authorizations/e374c4a4-6073-4f4c-7a57-08d7fcb6e19e\",\n        \"transaction\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/transactions/e374c4a4-6073-4f4c-7a57-08d7fcb6e19e\",\n            \"created\": \"2020-05-22T09:27:34.7857797Z\",\n            \"updated\": \"2020-05-22T09:27:47.8223235Z\",\n            \"type\": \"Authorization\",\n            \"state\": \"Completed\",\n            \"number\": 41100171206,\n            \"amount\": 10000,\n            \"vatAmount\": 0,\n            \"description\": \"test description\",\n            \"payeeReference\": \"someUniqueReference1590139652\",\n            \"isOperational\": false,\n            \"operations\": []\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get payment (verify authorization OK and proceed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ec81c365-1fbb-4e7d-aacb-2da67759df59",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel === \"create-authorization\");\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=authorizations",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "authorizations"
										}
									]
								}
							},
							"response": [
								{
									"name": "Completed payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"invoice",
												"payments",
												"d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 09:39:04 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1647"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9\",\n        \"number\": 41100171205,\n        \"created\": \"2020-05-22T09:27:33.3005217Z\",\n        \"updated\": \"2020-05-22T09:27:47.8223231Z\",\n        \"instrument\": \"Invoice\",\n        \"operation\": \"FinancingConsumer\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"prices\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/prices\"\n        },\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 10000,\n        \"remainingCancellationAmount\": 10000,\n        \"description\": \"test description\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"transactions\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/authorizations\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/cancellations\",\n            \"rel\": \"create-cancellation\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/captures\",\n            \"rel\": \"create-capture\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/paid\",\n            \"rel\": \"paid-payment\",\n            \"contentType\": \"application/json\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Capture payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"activity\": \"FinancingConsumer\",\n        \"amount\": 1001,\n        \"vatAmount\": 375,\n        \"payeeReference\": \"{{payeeReference}}\",\n        \"description\": \"description for transaction\",\n        \"itemDescriptions\": [\n            {\n                \"amount\": 1000,\n                \"description\": \"item description 1\"\n            },\n            {\n                \"amount\": 1,\n                \"description\": \"item description 2\"\n            }\n        ],\n        \"vatSummary\": [\n            {\n                \"amount\": 1001,\n                \"vatPercent\": 0,\n                \"vatAmount\": 375\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationcapturePayment}}",
									"host": [
										"{{operationcapturePayment}}"
									]
								}
							},
							"response": [
								{
									"name": "Capture payment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transaction\": {\n        \"activity\": \"FinancingConsumer\",\n        \"amount\": 1001,\n        \"vatAmount\": 375,\n        \"payeeReference\": \"someUniqueReference1590140509\",\n        \"description\": \"description for transaction\",\n        \"itemDescriptions\": [\n            {\n                \"amount\": 1000,\n                \"description\": \"item description 1\"\n            },\n            {\n                \"amount\": 1,\n                \"description\": \"item description 2\"\n            }\n        ],\n        \"vatSummary\": [\n            {\n                \"amount\": 1001,\n                \"vatPercent\": 0,\n                \"vatAmount\": 375\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/captures",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"invoice",
												"payments",
												"d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9",
												"captures"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/captures/22956189-30ef-472a-2676-08d7fcb656c0"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 09:41:49 GMT"
										},
										{
											"key": "Content-Length",
											"value": "813"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9\",\n    \"capture\": {\n        \"itemDescriptions\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/transactions/22956189-30ef-472a-2676-08d7fcb656c0/itemdescriptions\"\n        },\n        \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/captures/22956189-30ef-472a-2676-08d7fcb656c0\",\n        \"transaction\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/transactions/22956189-30ef-472a-2676-08d7fcb656c0\",\n            \"created\": \"2020-05-22T09:41:50.2906999Z\",\n            \"updated\": \"2020-05-22T09:41:50.6852434Z\",\n            \"type\": \"Capture\",\n            \"state\": \"Completed\",\n            \"number\": 41100171210,\n            \"amount\": 1001,\n            \"vatAmount\": 375,\n            \"description\": \"description for transaction\",\n            \"payeeReference\": \"someUniqueReference1590140509\",\n            \"isOperational\": false,\n            \"reconciliationNumber\": 737566,\n            \"operations\": []\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get payment (verify capture OK and proceed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9e774975-7cdd-47e4-ae10-9baa5be90369",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel === \"create-authorization\");\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=captures",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "captures"
										}
									]
								}
							},
							"response": [
								{
									"name": "Completed payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"invoice",
												"payments",
												"d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 09:39:04 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1647"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9\",\n        \"number\": 41100171205,\n        \"created\": \"2020-05-22T09:27:33.3005217Z\",\n        \"updated\": \"2020-05-22T09:27:47.8223231Z\",\n        \"instrument\": \"Invoice\",\n        \"operation\": \"FinancingConsumer\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"prices\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/prices\"\n        },\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 10000,\n        \"remainingCancellationAmount\": 10000,\n        \"description\": \"test description\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"transactions\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/authorizations\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/cancellations\",\n            \"rel\": \"create-cancellation\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/captures\",\n            \"rel\": \"create-capture\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/paid\",\n            \"rel\": \"paid-payment\",\n            \"contentType\": \"application/json\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Reverse payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"activity\": \"FinancingConsumer\",\n        \"amount\": 1,\n        \"vatAmount\": 0,\n        \"payeeReference\": \"{{payeeReference}}\",\n        \"description\": \"Reversal of invoice transaction\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationreversePayment}}",
									"host": [
										"{{operationreversePayment}}"
									]
								}
							},
							"response": [
								{
									"name": "Reverse payment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transaction\": {\n        \"activity\": \"FinancingConsumer\",\n        \"amount\": 1,\n        \"vatAmount\": 0,\n        \"payeeReference\": \"someUniqueReference1590140649\",\n        \"description\": \"Reversal of invoice transaction\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/reversals",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"invoice",
												"payments",
												"d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9",
												"reversals"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/reversals/75a7e994-29fb-44df-7a5a-08d7fcb6e19e"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 09:44:10 GMT"
										},
										{
											"key": "Content-Length",
											"value": "661"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9\",\n    \"reversal\": {\n        \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/reversals/75a7e994-29fb-44df-7a5a-08d7fcb6e19e\",\n        \"transaction\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/transactions/75a7e994-29fb-44df-7a5a-08d7fcb6e19e\",\n            \"created\": \"2020-05-22T09:44:10.6086241Z\",\n            \"updated\": \"2020-05-22T09:44:11.3103128Z\",\n            \"type\": \"Reversal\",\n            \"state\": \"Completed\",\n            \"number\": 41100171211,\n            \"amount\": 1,\n            \"vatAmount\": 0,\n            \"description\": \"Reversal of invoice transaction\",\n            \"payeeReference\": \"someUniqueReference1590140649\",\n            \"isOperational\": false,\n            \"reconciliationNumber\": 737566,\n            \"operations\": []\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get payment (verify reversal OK and proceed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e13e3e7b-06ce-4b87-a3a6-eef8b3d60a75",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel === \"create-authorization\");\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=reversals",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "reversals"
										}
									]
								}
							},
							"response": [
								{
									"name": "Completed payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"invoice",
												"payments",
												"d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 09:39:04 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1647"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9\",\n        \"number\": 41100171205,\n        \"created\": \"2020-05-22T09:27:33.3005217Z\",\n        \"updated\": \"2020-05-22T09:27:47.8223231Z\",\n        \"instrument\": \"Invoice\",\n        \"operation\": \"FinancingConsumer\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"prices\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/prices\"\n        },\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 10000,\n        \"remainingCancellationAmount\": 10000,\n        \"description\": \"test description\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"transactions\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/authorizations\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/cancellations\",\n            \"rel\": \"create-cancellation\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/captures\",\n            \"rel\": \"create-capture\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/paid\",\n            \"rel\": \"paid-payment\",\n            \"contentType\": \"application/json\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Cancel payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"activity\": \"FinancingConsumer\",\n        \"payeeReference\": \"{{payeeReference}}\",\n        \"description\": \"test cancellation.\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationcancelPayment}}",
									"host": [
										"{{operationcancelPayment}}"
									]
								}
							},
							"response": [
								{
									"name": "Cancel payment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transaction\": {\n        \"activity\": \"FinancingConsumer\",\n        \"payeeReference\": \"{{payeeReference}}\",\n        \"description\": \"test cancellation.\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/cancellations",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"creditcard",
												"payments",
												"ff9c526c-b4b4-4906-b2fe-08d7f727ce7b",
												"cancellations"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/cancellations/ae7bc7ae-3be4-42c1-1992-08d7f7285952"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Wed, 13 May 2020 12:23:18 GMT"
										},
										{
											"key": "Content-Length",
											"value": "640"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b\",\n    \"cancellation\": {\n        \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/cancellations/ae7bc7ae-3be4-42c1-1992-08d7f7285952\",\n        \"transaction\": {\n            \"id\": \"/psp/creditcard/payments/ff9c526c-b4b4-4906-b2fe-08d7f727ce7b/transactions/ae7bc7ae-3be4-42c1-1992-08d7f7285952\",\n            \"created\": \"2020-05-13T12:23:17.8910568Z\",\n            \"updated\": \"2020-05-13T12:23:18.5253673Z\",\n            \"type\": \"Cancellation\",\n            \"state\": \"Completed\",\n            \"number\": 40101602237,\n            \"amount\": 8999,\n            \"vatAmount\": 0,\n            \"description\": \"your description\",\n            \"payeeReference\": \"someUniqueReference1589372595\",\n            \"isOperational\": false,\n            \"operations\": []\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get payment (verify cancel OK)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6b6d1a0d-1526-42a0-8fb6-b7222698db35",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel === \"create-authorization\");\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=cancellations",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cancellations"
										}
									]
								}
							},
							"response": [
								{
									"name": "Completed payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"invoice",
												"payments",
												"d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 09:39:04 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1647"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9\",\n        \"number\": 41100171205,\n        \"created\": \"2020-05-22T09:27:33.3005217Z\",\n        \"updated\": \"2020-05-22T09:27:47.8223231Z\",\n        \"instrument\": \"Invoice\",\n        \"operation\": \"FinancingConsumer\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"prices\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/prices\"\n        },\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 10000,\n        \"remainingCancellationAmount\": 10000,\n        \"description\": \"test description\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"transactions\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/authorizations\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/cancellations\",\n            \"rel\": \"create-cancellation\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/captures\",\n            \"rel\": \"create-capture\",\n            \"contentType\": \"application/json\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/invoice/payments/d6dcaf55-3bb1-4e46-7f92-08d7fcb653b9/paid\",\n            \"rel\": \"paid-payment\",\n            \"contentType\": \"application/json\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Mobile Pay",
					"item": [
						{
							"name": "create payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "add638b4-8929-4d73-8533-6693edfd2bf7",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    // Finding the values to set to globals\r",
											"    const paymentId = responseBody.payment.id;\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel === \"direct-\");\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-authorization\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    pm.environment.set(\"paymentId\", paymentId);\r",
											"    pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\"); // These will only be set if the operation is found\r",
											"    pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"    pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"    pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\"); // when trying to use N/A data.\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"payment\": {\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"currency\": \"DKK\",\n        \"prices\": [\n            {\n                \"type\": \"Visa\",\n                \"amount\": 10000,\n                \"vatAmount\": 0\n            },\n            {\n                \"type\": \"MasterCard\",\n                \"amount\": 10000,\n                \"vatAmount\": 0\n            }\n        ],\n        \"description\": \"{{description}}\",\n        \"payerReference\": \"AB1234\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"{{language}}\",\n        \"urls\": {\n        \t\"hostUrls\": [\n        \t\t\"{{hostUrl}}\"\n    \t\t],\n            \"completeUrl\": \"{{completeUrl}}\",\n            \"cancelUrl\": \"{{cancelUrl}}\",\n            \"callbackUrl\": \"{{callbackUrl}}\",\n            \"termsOfServiceUrl\": \"{{ToSUrl}}\",\n            \"logoUrl\": \"{{logoUrl}}\"\n        },\n        \"payeeInfo\": {\n            \"payeeId\": \"{{merchantId}}\",\n            \"payeeReference\": \"{{payeeReference}}\",\n            \"payeeName\": \"{{merchantName}}\"\n        }\n    },\n    \"mobilePay\": {\n    \t\"shoplogoUrl\": \"Url for shop logo url\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/psp/mobilepay/payments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"psp",
										"mobilepay",
										"payments"
									]
								}
							},
							"response": [
								{
									"name": "create payment",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"payment\": {\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"currency\": \"DKK\",\n        \"prices\": [\n            {\n                \"type\": \"Visa\",\n                \"amount\": 10000,\n                \"vatAmount\": 0\n            },\n            {\n                \"type\": \"MasterCard\",\n                \"amount\": 10000,\n                \"vatAmount\": 0\n            }\n        ],\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"urls\": {\n        \t\"hostUrls\": [\n        \t\t\"https://en.wikipedia.org/wiki/Host\"\n    \t\t],\n            \"completeUrl\": \"https://en.wikipedia.org/wiki/Success\",\n            \"cancelUrl\": \"https://en.wikipedia.org/wiki/Cancel\",\n            \"callbackUrl\": \"https://en.wikipedia.org/wiki/Callback\",\n            \"termsOfServiceUrl\": \"https://en.wikipedia.org/wiki/Terms_Of_Service\",\n            \"logoUrl\": \"https://design.swedbankpay.com/v/4.5.0/img/swedbankpay-logo.svg\"\n        },\n        \"payeeInfo\": {\n            \"payeeId\": \"734310b0-f9b5-48ea-b730-b3628d907f0c\",\n            \"payeeReference\": \"someUniquereference123897\",\n            \"payeeName\": \"test merchant\"\n        }\n    },\n    \"mobilepay\": {\n    \t\"shoplogoUrl\": \"Url for shop logo url\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psp/mobilepay/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psp",
												"mobilepay",
												"payments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/mobilepay/payments/c9bcaaf8-2053-447d-4d7f-08d7fdb34f0c"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 11:07:43 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"prices\": {\n            \"id\": \"/psp/mobilepay/payments/c9bcaaf8-2053-447d-4d7f-08d7fdb34f0c/prices\"\n        },\n        \"id\": \"/psp/mobilepay/payments/c9bcaaf8-2053-447d-4d7f-08d7fdb34f0c\",\n        \"number\": 45100001723,\n        \"created\": \"2020-05-22T11:07:43.183665Z\",\n        \"updated\": \"2020-05-22T11:07:43.5752473Z\",\n        \"instrument\": \"MobilePay\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"DKK\",\n        \"amount\": 0,\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"transactions\": {\n            \"id\": \"/psp/mobilepay/payments/c9bcaaf8-2053-447d-4d7f-08d7fdb34f0c/transactions\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/mobilepay/payments/c9bcaaf8-2053-447d-4d7f-08d7fdb34f0c/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/mobilepay/payments/c9bcaaf8-2053-447d-4d7f-08d7fdb34f0c/payeeinfo\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"PATCH\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/c9bcaaf8-2053-447d-4d7f-08d7fdb34f0c\",\n            \"rel\": \"update-payment-abort\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/mobilepay/payments/authorize/cfd442ef65eb33125c825a3a9ce5f9273502f738de85ce56f921bfd722d1ee95\",\n            \"rel\": \"redirect-authorization\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get payment (verify authorization OK and proceed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5cd64069-5e5d-4834-bc24-660e4fb71e49",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel.startsWith(\"direct-\"));\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=authorizations",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "authorizations"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"mobilepay",
												"payments",
												"d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 11:11:26 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"prices\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/prices\"\n        },\n        \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c\",\n        \"number\": 45100001726,\n        \"created\": \"2020-05-22T11:10:57.7554471Z\",\n        \"updated\": \"2020-05-22T11:11:17.4694796Z\",\n        \"instrument\": \"MobilePay\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"DKK\",\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 10000,\n        \"remainingCancellationAmount\": 10000,\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"transactions\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/authorizations\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/payeeinfo\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/cancellations\",\n            \"rel\": \"create-cancellation\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/captures\",\n            \"rel\": \"create-capture\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Capture payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"amount\": 1001,\n        \"vatAmount\": 0,\n        \"description\": \"your description\",\n        \"payeeReference\": \"{{payeeReference}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationcapturePayment}}",
									"host": [
										"{{operationcapturePayment}}"
									]
								}
							},
							"response": [
								{
									"name": "Capture payment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transaction\": {\n        \"amount\": 1001,\n        \"vatAmount\": 0,\n        \"description\": \"your description\",\n        \"payeeReference\": \"someUniqueReference1590145929\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/captures",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"mobilepay",
												"payments",
												"d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c",
												"captures"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/captures/2e57a1a0-b268-4ea8-9ed1-08d7fcd4200a"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 11:12:09 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c\",\n    \"capture\": {\n        \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/captures/2e57a1a0-b268-4ea8-9ed1-08d7fcd4200a\",\n        \"transaction\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/transactions/2e57a1a0-b268-4ea8-9ed1-08d7fcd4200a\",\n            \"created\": \"2020-05-22T11:12:10.1723394Z\",\n            \"updated\": \"2020-05-22T11:12:10.5074876Z\",\n            \"type\": \"Capture\",\n            \"state\": \"Completed\",\n            \"number\": 45100001729,\n            \"amount\": 1001,\n            \"vatAmount\": 0,\n            \"description\": \"your description\",\n            \"payeeReference\": \"someUniqueReference1590145929\",\n            \"isOperational\": false,\n            \"operations\": []\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get payment (verify capture OK and proceed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9f8a2374-df2a-445a-ab44-147b5445a091",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel.startsWith(\"direct-\"));\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=captures",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "captures"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"mobilepay",
												"payments",
												"d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 11:11:26 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"prices\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/prices\"\n        },\n        \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c\",\n        \"number\": 45100001726,\n        \"created\": \"2020-05-22T11:10:57.7554471Z\",\n        \"updated\": \"2020-05-22T11:11:17.4694796Z\",\n        \"instrument\": \"MobilePay\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"DKK\",\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 10000,\n        \"remainingCancellationAmount\": 10000,\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"transactions\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/authorizations\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/payeeinfo\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/cancellations\",\n            \"rel\": \"create-cancellation\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/captures\",\n            \"rel\": \"create-capture\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Reverse payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"amount\": 1,\n        \"vatAmount\": 0,\n        \"description\": \"your description\",\n        \"payeeReference\": \"{{payeeReference}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationreversePayment}}",
									"host": [
										"{{operationreversePayment}}"
									]
								}
							},
							"response": [
								{
									"name": "Reverse payment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transaction\": {\n        \"amount\": 1,\n        \"vatAmount\": 0,\n        \"description\": \"your description\",\n        \"payeeReference\": \"someUniqueReference1590145971\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/reversals",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"mobilepay",
												"payments",
												"d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c",
												"reversals"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/reversals/160c8fc8-69a4-44af-9ed2-08d7fcd4200a"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 11:12:51 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c\",\n    \"reversal\": {\n        \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/reversals/160c8fc8-69a4-44af-9ed2-08d7fcd4200a\",\n        \"transaction\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/transactions/160c8fc8-69a4-44af-9ed2-08d7fcd4200a\",\n            \"created\": \"2020-05-22T11:12:52.0591762Z\",\n            \"updated\": \"2020-05-22T11:12:52.4721839Z\",\n            \"type\": \"Reversal\",\n            \"state\": \"Completed\",\n            \"number\": 45100001730,\n            \"amount\": 1,\n            \"vatAmount\": 0,\n            \"description\": \"your description\",\n            \"payeeReference\": \"someUniqueReference1590145971\",\n            \"isOperational\": false,\n            \"operations\": []\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get payment (verify reversal OK and proceed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "83d6152c-5d42-4368-a823-50ad662ecf4b",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel.startsWith(\"direct-\"));\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=reversals",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "reversals"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"mobilepay",
												"payments",
												"d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 11:11:26 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"prices\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/prices\"\n        },\n        \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c\",\n        \"number\": 45100001726,\n        \"created\": \"2020-05-22T11:10:57.7554471Z\",\n        \"updated\": \"2020-05-22T11:11:17.4694796Z\",\n        \"instrument\": \"MobilePay\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"DKK\",\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 10000,\n        \"remainingCancellationAmount\": 10000,\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"transactions\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/authorizations\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/payeeinfo\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/cancellations\",\n            \"rel\": \"create-cancellation\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/captures\",\n            \"rel\": \"create-capture\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Cancel payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"description\": \"your description\",\n        \"payeeReference\": \"{{payeeReference}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationcancelPayment}}",
									"host": [
										"{{operationcancelPayment}}"
									]
								}
							},
							"response": [
								{
									"name": "Cancel payment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transaction\": {\n        \"description\": \"your description\",\n        \"payeeReference\": \"{{payeeReference}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/cancellations",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"mobilepay",
												"payments",
												"d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c",
												"cancellations"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/cancellations/772ac0c5-b523-4281-b1c6-08d7fcd43e04"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 11:13:49 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c\",\n    \"cancellation\": {\n        \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/cancellations/772ac0c5-b523-4281-b1c6-08d7fcd43e04\",\n        \"transaction\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/transactions/772ac0c5-b523-4281-b1c6-08d7fcd43e04\",\n            \"created\": \"2020-05-22T11:13:49.7285825Z\",\n            \"updated\": \"2020-05-22T11:13:49.9859917Z\",\n            \"type\": \"Cancellation\",\n            \"state\": \"Completed\",\n            \"number\": 45100001731,\n            \"amount\": 8999,\n            \"vatAmount\": 0,\n            \"description\": \"your description\",\n            \"payeeReference\": \"someUniqueReference1590146029\",\n            \"isOperational\": false,\n            \"operations\": []\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get payment (verify cancel OK)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bcec80f6-32c7-4a43-a2ed-c43f65170358",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel.startsWith(\"direct-\"));\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=cancellations",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cancellations"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"mobilepay",
												"payments",
												"d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 11:11:26 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"prices\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/prices\"\n        },\n        \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c\",\n        \"number\": 45100001726,\n        \"created\": \"2020-05-22T11:10:57.7554471Z\",\n        \"updated\": \"2020-05-22T11:11:17.4694796Z\",\n        \"instrument\": \"MobilePay\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"DKK\",\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 10000,\n        \"remainingCancellationAmount\": 10000,\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"transactions\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/authorizations\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/payeeinfo\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/cancellations\",\n            \"rel\": \"create-cancellation\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/mobilepay/payments/d4468d50-dfa2-4a8d-4d80-08d7fdb34f0c/captures\",\n            \"rel\": \"create-capture\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Swish",
					"item": [
						{
							"name": "create payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d1abadd6-d3f2-4503-8871-f8a7c6d2c924",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    // Finding the values to set to globals\r",
											"    const paymentId = responseBody.payment.id;\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel ===\"create-sale\");\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-sales\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    pm.environment.set(\"paymentId\", paymentId);\r",
											"    pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\"); // These will only be set if the operation is found\r",
											"    pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"    pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"    pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\"); // when trying to use N/A data.\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"payment\": {\n        \"operation\": \"Purchase\",\n        \"intent\": \"Sale\",\n        \"currency\": \"SEK\",\n        \"prices\": [\n            {\n                \"type\": \"Swish\",\n                \"amount\": 10000,\n                \"vatAmount\": 0\n            }\n        ],\n        \"description\": \"{{description}}\",\n        \"payerReference\": \"AB1234\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"{{language}}\",\n        \"urls\": {\n        \t\"hostUrls\": [\n        \t\t\"{{hostUrl}}\"\n    \t\t],\n            \"completeUrl\": \"{{completeUrl}}\",\n            \"cancelUrl\": \"{{cancelUrl}}\",\n            \"callbackUrl\": \"{{callbackUrl}}\",\n            \"termsOfServiceUrl\": \"{{ToSUrl}}\",\n            \"logoUrl\": \"{{logoUrl}}\"\n        },\n        \"payeeInfo\": {\n            \"payeeId\": \"{{merchantId}}\",\n            \"payeeReference\": \"{{payeeReference}}\",\n            \"payeeName\": \"{{merchantName}}\"\n        },\n        \"prefillInfo\": {\n        \t\"msisdn\": \"{{msisdn}}\"\n        }\n    },\n    \"swish\": {\n    \t\"enableEcomOnly\": true\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/psp/swish/payments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"psp",
										"swish",
										"payments"
									]
								}
							},
							"response": [
								{
									"name": "create payment",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"payment\": {\n        \"operation\": \"Purchase\",\n        \"intent\": \"Sale\",\n        \"currency\": \"SEK\",\n        \"prices\": [\n            {\n                \"type\": \"Swish\",\n                \"amount\": 10000,\n                \"vatAmount\": 0\n            }\n        ],\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"urls\": {\n        \t\"hostUrls\": [\n        \t\t\"https://en.wikipedia.org/wiki/Host\"\n    \t\t],\n            \"completeUrl\": \"https://en.wikipedia.org/wiki/Success\",\n            \"cancelUrl\": \"https://en.wikipedia.org/wiki/Cancel\",\n            \"callbackUrl\": \"https://en.wikipedia.org/wiki/Callback\",\n            \"termsOfServiceUrl\": \"https://en.wikipedia.org/wiki/Terms_Of_Service\",\n            \"logoUrl\": \"https://design.swedbankpay.com/v/4.5.0/img/swedbankpay-logo.svg\"\n        },\n        \"payeeInfo\": {\n            \"payeeId\": \"734310b0-f9b5-48ea-b730-b3628d907f0c\",\n            \"payeeReference\": \"someUniquereference123897\",\n            \"payeeName\": \"test merchant\"\n        },\n        \"prefillInfo\": {\n        \t\"msisdn\": \"+46765432198\"\n        }\n    },\n    \"swish\": {\n    \t\"enableEcomOnly\": true\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psp/swish/payments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psp",
												"swish",
												"payments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/swish/payments/fd4839d4-98f8-42ec-8c77-08d7fcb702fe"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 11:39:14 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1796"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"id\": \"/psp/swish/payments/fd4839d4-98f8-42ec-8c77-08d7fcb702fe\",\n        \"number\": 44100217657,\n        \"created\": \"2020-05-22T11:39:14.9328212Z\",\n        \"updated\": \"2020-05-22T11:39:14.9351713Z\",\n        \"instrument\": \"Swish\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Sale\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"prices\": {\n            \"id\": \"/psp/swish/payments/fd4839d4-98f8-42ec-8c77-08d7fcb702fe/prices\"\n        },\n        \"amount\": 0,\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"urls\": {\n            \"id\": \"/psp/swish/payments/fd4839d4-98f8-42ec-8c77-08d7fcb702fe/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/swish/payments/fd4839d4-98f8-42ec-8c77-08d7fcb702fe/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/swish/payments/fd4839d4-98f8-42ec-8c77-08d7fcb702fe/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"PATCH\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/fd4839d4-98f8-42ec-8c77-08d7fcb702fe\",\n            \"rel\": \"update-payment-abort\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/fd4839d4-98f8-42ec-8c77-08d7fcb702fe/sales\",\n            \"rel\": \"create-sale\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/swish/payments/sales/5dafbb57f67e697a976cb91630144961b7fe575eac54223bd00c9d64b81bcdc3\",\n            \"rel\": \"redirect-sale\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/swish/core/scripts/client/px.swish.client.js?token=5dafbb57f67e697a976cb91630144961b7fe575eac54223bd00c9d64b81bcdc3&Culture=sv-SE\",\n            \"rel\": \"view-sales\",\n            \"contentType\": \"application/javascript\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/swish/core/scripts/client/px.swish.client.js?token=5dafbb57f67e697a976cb91630144961b7fe575eac54223bd00c9d64b81bcdc3&Culture=sv-SE\",\n            \"rel\": \"view-payment\",\n            \"contentType\": \"application/javascript\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "accomplish sale",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "72b88b5b-9a96-43d7-832d-0b13a9c3ab23",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    // Finding the values to set to globals\r",
											"    const transactionId = responseBody.authorization.id;\r",
											"    const authorization = responseBody.authorization;\r",
											"    const paymentToken = authorization.paymentToken ? authorization.paymentToken : undefined;\r",
											"    const recurrenceToken = authorization.paymentToken ? authorization.recurrenceToken : undefined;\r",
											"    if(paymentToken)\r",
											"        pm.environment.set(\"paymentToken\", paymentToken);\r",
											"    if(recurrenceToken)\r",
											"        pm.environment.set(\"recurrenceToken\", recurrenceToken);\r",
											"    \r",
											"    pm.environment.set(\"transactionId\", transactionId);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n    \t\"msisdn\": \"{{msisdn}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationDirectPayment}}",
									"host": [
										"{{operationDirectPayment}}"
									]
								}
							},
							"response": [
								{
									"name": "accomplish sale",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transaction\": {\n    \t\"msisdn\": \"+46765432198\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{operationDirectPayment}}",
											"host": [
												"{{operationDirectPayment}}"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/swish/payments/1bb1ebb7-1cf1-43cc-8c76-08d7fcb702fe/sales/8822aceb-1be7-4554-9116-08d7fcb6709e"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 11:38:46 GMT"
										},
										{
											"key": "Content-Length",
											"value": "657"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/swish/payments/1bb1ebb7-1cf1-43cc-8c76-08d7fcb702fe\",\n    \"sale\": {\n        \"date\": \"5/22/2020 11:38:46 AM +00:00\",\n        \"swishFlowType\": \"EcomSwishFlow\",\n        \"isPaymentRestrictedToSocialSecurityNumber\": false,\n        \"id\": \"/psp/swish/payments/1bb1ebb7-1cf1-43cc-8c76-08d7fcb702fe/sales/8822aceb-1be7-4554-9116-08d7fcb6709e\",\n        \"transaction\": {\n            \"id\": \"8822aceb-1be7-4554-9116-08d7fcb6709e\",\n            \"created\": \"2020-05-22T11:38:45.8021903Z\",\n            \"updated\": \"2020-05-22T11:38:46.149007Z\",\n            \"type\": \"Sale\",\n            \"state\": \"AwaitingActivity\",\n            \"number\": 44100217656,\n            \"amount\": 10000,\n            \"vatAmount\": 0,\n            \"description\": \"test description\",\n            \"payeeReference\": \"someUniqueReference1590147523\",\n            \"isOperational\": true,\n            \"operations\": []\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get payment (verify sale OK and proceed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d8a82fcb-33f1-4669-bc2b-3fab95748ab7",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel.startsWith(\"direct-\"));\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									]
								}
							},
							"response": [
								{
									"name": "Get payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"swish",
												"payments",
												"4091418c-5280-464d-04ba-08d7fcb66e59"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 11:42:17 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1472"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"id\": \"/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59\",\n        \"number\": 44100217658,\n        \"created\": \"2020-05-22T11:41:08.6229167Z\",\n        \"updated\": \"2020-05-22T11:41:37.4947661Z\",\n        \"instrument\": \"Swish\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Sale\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"prices\": {\n            \"id\": \"/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59/prices\"\n        },\n        \"amount\": 10000,\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"transactions\": {\n            \"id\": \"/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59/transactions\"\n        },\n        \"sales\": {\n            \"id\": \"/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59/sales\"\n        },\n        \"reversals\": {\n            \"id\": \"/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59/reversals\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59/paid\",\n            \"rel\": \"paid-payment\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/swish/core/scripts/client/px.swish.client.js?token=540b59d09b8de6c66a20f166826ee27ca21d849e4af15633fa157a0a2a3ab709&Culture=sv-SE\",\n            \"rel\": \"view-payment\",\n            \"contentType\": \"application/javascript\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Reverse payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"amount\": 10000,\n        \"vatAmount\": 0,\n        \"description\": \"your description\",\n        \"payeeReference\": \"{{payeeReference}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationreversePayment}}",
									"host": [
										"{{operationreversePayment}}"
									]
								}
							},
							"response": [
								{
									"name": "Reverse payment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transaction\": {\n        \"amount\": 10000,\n        \"vatAmount\": 0,\n        \"description\": \"your description\",\n        \"payeeReference\": \"someUniqueReference1590147688\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59/reversals",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"swish",
												"payments",
												"4091418c-5280-464d-04ba-08d7fcb66e59",
												"reversals"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Length",
											"value": "621"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59/reversals/da71a1cc-8000-4739-9117-08d7fcb6709e"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 11:41:29 GMT"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59\",\n    \"reversal\": {\n        \"description\": \"your description\",\n        \"date\": \"5/22/2020 11:41:29 AM +00:00\",\n        \"id\": \"/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59/reversals/da71a1cc-8000-4739-9117-08d7fcb6709e\",\n        \"transaction\": {\n            \"id\": \"da71a1cc-8000-4739-9117-08d7fcb6709e\",\n            \"created\": \"2020-05-22T11:41:29.1564849Z\",\n            \"updated\": \"2020-05-22T11:41:29.5028537Z\",\n            \"type\": \"Reversal\",\n            \"state\": \"AwaitingActivity\",\n            \"number\": 44100217660,\n            \"amount\": 10000,\n            \"vatAmount\": 0,\n            \"description\": \"your description\",\n            \"payeeReference\": \"someUniqueReference1590147688\",\n            \"isOperational\": true,\n            \"operations\": []\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get payment (verify reversal and proceed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e0b8585b-26a1-457d-a981-f9045e5520d2",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel.startsWith(\"direct-\"));\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									]
								}
							},
							"response": [
								{
									"name": "Get payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"swish",
												"payments",
												"4091418c-5280-464d-04ba-08d7fcb66e59"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 11:42:17 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1472"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"id\": \"/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59\",\n        \"number\": 44100217658,\n        \"created\": \"2020-05-22T11:41:08.6229167Z\",\n        \"updated\": \"2020-05-22T11:41:37.4947661Z\",\n        \"instrument\": \"Swish\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Sale\",\n        \"state\": \"Ready\",\n        \"currency\": \"SEK\",\n        \"prices\": {\n            \"id\": \"/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59/prices\"\n        },\n        \"amount\": 10000,\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"sv-SE\",\n        \"transactions\": {\n            \"id\": \"/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59/transactions\"\n        },\n        \"sales\": {\n            \"id\": \"/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59/sales\"\n        },\n        \"reversals\": {\n            \"id\": \"/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59/reversals\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/swish/payments/4091418c-5280-464d-04ba-08d7fcb66e59/paid\",\n            \"rel\": \"paid-payment\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/swish/core/scripts/client/px.swish.client.js?token=540b59d09b8de6c66a20f166826ee27ca21d849e4af15633fa157a0a2a3ab709&Culture=sv-SE\",\n            \"rel\": \"view-payment\",\n            \"contentType\": \"application/javascript\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Vipps",
					"item": [
						{
							"name": "create payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e472cef1-fa32-4a0d-b201-92aa36df9719",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    // Finding the values to set to globals\r",
											"    const paymentId = responseBody.payment.id;\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel === \"direct-\");\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-authorization\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    pm.environment.set(\"paymentId\", paymentId);\r",
											"    pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\"); // These will only be set if the operation is found\r",
											"    pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"    pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"    pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\"); // when trying to use N/A data.\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"payment\": {\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"currency\": \"NOK\",\n        \"prices\": [\n            {\n                \"type\": \"Vipps\",\n                \"amount\": 10000,\n                \"vatAmount\": 0\n            }\n        ],\n        \"description\": \"{{description}}\",\n        \"payerReference\": \"AB1234\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"{{language}}\",\n        \"urls\": {\n        \t\"hostUrls\": [\n        \t\t\"{{hostUrl}}\"\n    \t\t],\n            \"completeUrl\": \"{{completeUrl}}\",\n            \"cancelUrl\": \"{{cancelUrl}}\",\n            \"callbackUrl\": \"{{callbackUrl}}\",\n            \"termsOfServiceUrl\": \"{{ToSUrl}}\",\n            \"logoUrl\": \"{{logoUrl}}\"\n        },\n        \"payeeInfo\": {\n            \"payeeId\": \"{{merchantId}}\",\n            \"payeeReference\": \"{{payeeReference}}\",\n            \"payeeName\": \"{{merchantName}}\"\n        },\n        \"prefillInfo\": {\n        \t\"msisdn\": \"{{msisdn}}\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/psp/vipps/payments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"psp",
										"vipps",
										"payments"
									]
								}
							},
							"response": [
								{
									"name": "create payment",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"payment\": {\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"currency\": \"NOK\",\n        \"prices\": [\n            {\n                \"type\": \"Vipps\",\n                \"amount\": 10000,\n                \"vatAmount\": 0\n            }\n        ],\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"nb-NO\",\n        \"urls\": {\n        \t\"hostUrls\": [\n        \t\t\"https://en.wikipedia.org/wiki/host\"\n    \t\t],\n            \"completeUrl\": \"https://en.wikipedia.org/wiki/Success\",\n            \"cancelUrl\": \"https://en.wikipedia.org/wiki/Cancel\",\n            \"callbackUrl\": \"https://en.wikipedia.org/wiki/callback\",\n            \"termsOfServiceUrl\": \"https://en.wikipedia.org/wiki/Terms_Of_Service\",\n            \"logoUrl\": \"https://design.swedbankpay.com/v/4.5.0/img/swedbankpay-logo.svg\"\n        },\n        \"payeeInfo\": {\n            \"payeeId\": \"cdff105b-1879-4d10-a83b-7bd7115cffef\",\n            \"payeeReference\": \"someUniqueReference4357828374\",\n            \"payeeName\": \"Test merchant\"\n        },\n        \"prefillInfo\": {\n        \t\"msisdn\": \"+4648060276\"\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/vipps/payments",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"vipps",
												"payments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 08:26:06 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1689"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242\",\n        \"number\": 42100038543,\n        \"created\": \"2020-05-22T08:26:07.0724844Z\",\n        \"updated\": \"2020-05-22T08:26:06.8139219Z\",\n        \"instrument\": \"Vipps\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"NOK\",\n        \"prices\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/prices\"\n        },\n        \"amount\": 0,\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"nb-NO\",\n        \"urls\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"PATCH\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242\",\n            \"rel\": \"update-payment-abort\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/vipps/payments/authorize/58d2ef439e3644e7779477e8b5cfc943914a196d0792a5f47560d33f5f0b83c7?Culture=nb-NO\",\n            \"rel\": \"redirect-authorization\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/vipps/core/scripts/client/px.vipps.client.js?token=58d2ef439e3644e7779477e8b5cfc943914a196d0792a5f47560d33f5f0b83c7&Culture=nb-NO\",\n            \"rel\": \"view-authorization\",\n            \"contentType\": \"application/javascript\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/vipps/core/scripts/client/px.vipps.client.js?token=58d2ef439e3644e7779477e8b5cfc943914a196d0792a5f47560d33f5f0b83c7&Culture=nb-NO\",\n            \"rel\": \"view-payment\",\n            \"contentType\": \"application/javascript\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get payment (verify authorization OK and proceed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5b9f49d7-0022-4d77-b490-fc1c0ccaff9d",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel.startsWith(\"direct-\"));\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=authorizations",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "authorizations"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"vipps",
												"payments",
												"77e9c9ea-f891-41df-bd88-08d7fcc96242"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 08:30:32 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1802"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242\",\n        \"number\": 42100038543,\n        \"created\": \"2020-05-22T08:26:07.0724844Z\",\n        \"updated\": \"2020-05-22T08:30:22.1580058Z\",\n        \"instrument\": \"Vipps\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"NOK\",\n        \"prices\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/prices\"\n        },\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 10000,\n        \"remainingCancellationAmount\": 10000,\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"nb-NO\",\n        \"transactions\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/authorizations\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/cancellations\",\n            \"rel\": \"create-cancellation\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/captures\",\n            \"rel\": \"create-capture\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/paid\",\n            \"rel\": \"paid-payment\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/vipps/core/scripts/client/px.vipps.client.js?token=58d2ef439e3644e7779477e8b5cfc943914a196d0792a5f47560d33f5f0b83c7&Culture=nb-NO\",\n            \"rel\": \"view-payment\",\n            \"contentType\": \"application/javascript\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Capture payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"amount\": 1001,\n        \"vatAmount\": 0,\n        \"description\": \"your description\",\n        \"payeeReference\": \"{{payeeReference}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationcapturePayment}}",
									"host": [
										"{{operationcapturePayment}}"
									]
								}
							},
							"response": [
								{
									"name": "Capture payment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transaction\": {\n        \"amount\": 1001,\n        \"vatAmount\": 0,\n        \"description\": \"your description\",\n        \"payeeReference\": \"someUniqueReference1590136272\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/captures",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"vipps",
												"payments",
												"77e9c9ea-f891-41df-bd88-08d7fcc96242",
												"captures"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/captures/3a579700-3f27-4528-c1ad-08d7fcc00d7a"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 08:31:13 GMT"
										},
										{
											"key": "Content-Length",
											"value": "609"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242\",\n    \"capture\": {\n        \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/captures/3a579700-3f27-4528-c1ad-08d7fcc00d7a\",\n        \"transaction\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/transactions/3a579700-3f27-4528-c1ad-08d7fcc00d7a\",\n            \"created\": \"2020-05-22T08:31:13.267586Z\",\n            \"updated\": \"2020-05-22T08:31:13.4013999Z\",\n            \"type\": \"Capture\",\n            \"state\": \"Completed\",\n            \"number\": 42100038545,\n            \"amount\": 1001,\n            \"vatAmount\": 0,\n            \"description\": \"your description\",\n            \"payeeReference\": \"someUniqueReference1590136272\",\n            \"isOperational\": false,\n            \"operations\": []\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get payment (verify capture OK and proceed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "26d2b8a4-ca80-4ea3-925e-eae757d37db1",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel.startsWith(\"direct-\"));\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=captures",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "captures"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"vipps",
												"payments",
												"77e9c9ea-f891-41df-bd88-08d7fcc96242"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 08:30:32 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1802"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242\",\n        \"number\": 42100038543,\n        \"created\": \"2020-05-22T08:26:07.0724844Z\",\n        \"updated\": \"2020-05-22T08:30:22.1580058Z\",\n        \"instrument\": \"Vipps\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"NOK\",\n        \"prices\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/prices\"\n        },\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 10000,\n        \"remainingCancellationAmount\": 10000,\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"nb-NO\",\n        \"transactions\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/authorizations\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/cancellations\",\n            \"rel\": \"create-cancellation\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/captures\",\n            \"rel\": \"create-capture\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/paid\",\n            \"rel\": \"paid-payment\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/vipps/core/scripts/client/px.vipps.client.js?token=58d2ef439e3644e7779477e8b5cfc943914a196d0792a5f47560d33f5f0b83c7&Culture=nb-NO\",\n            \"rel\": \"view-payment\",\n            \"contentType\": \"application/javascript\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Reverse payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"amount\": 1,\n        \"vatAmount\": 0,\n        \"description\": \"your description\",\n        \"payeeReference\": \"{{payeeReference}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationreversePayment}}",
									"host": [
										"{{operationreversePayment}}"
									]
								}
							},
							"response": [
								{
									"name": "Reverse payment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transaction\": {\n        \"amount\": 1,\n        \"vatAmount\": 0,\n        \"description\": \"your description\",\n        \"payeeReference\": \"someUniqueReference1590136390\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/reversals",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"vipps",
												"payments",
												"77e9c9ea-f891-41df-bd88-08d7fcc96242",
												"reversals"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/reversals/bdce38ab-fdcc-4ed6-c68c-08d7fcc023d1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 08:33:10 GMT"
										},
										{
											"key": "Content-Length",
											"value": "609"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242\",\n    \"reversal\": {\n        \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/reversals/bdce38ab-fdcc-4ed6-c68c-08d7fcc023d1\",\n        \"transaction\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/transactions/bdce38ab-fdcc-4ed6-c68c-08d7fcc023d1\",\n            \"created\": \"2020-05-22T08:33:11.481887Z\",\n            \"updated\": \"2020-05-22T08:33:11.3961337Z\",\n            \"type\": \"Reversal\",\n            \"state\": \"Completed\",\n            \"number\": 42100038546,\n            \"amount\": 1,\n            \"vatAmount\": 0,\n            \"description\": \"your description\",\n            \"payeeReference\": \"someUniqueReference1590136390\",\n            \"isOperational\": false,\n            \"operations\": []\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get payment (verify reversal OK and proceed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c35d0c32-6298-46ee-a4e9-234a478ddab1",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel.startsWith(\"direct-\"));\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=reversals",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "reversals"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"vipps",
												"payments",
												"77e9c9ea-f891-41df-bd88-08d7fcc96242"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 08:30:32 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1802"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242\",\n        \"number\": 42100038543,\n        \"created\": \"2020-05-22T08:26:07.0724844Z\",\n        \"updated\": \"2020-05-22T08:30:22.1580058Z\",\n        \"instrument\": \"Vipps\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"NOK\",\n        \"prices\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/prices\"\n        },\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 10000,\n        \"remainingCancellationAmount\": 10000,\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"nb-NO\",\n        \"transactions\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/authorizations\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/cancellations\",\n            \"rel\": \"create-cancellation\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/captures\",\n            \"rel\": \"create-capture\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/paid\",\n            \"rel\": \"paid-payment\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/vipps/core/scripts/client/px.vipps.client.js?token=58d2ef439e3644e7779477e8b5cfc943914a196d0792a5f47560d33f5f0b83c7&Culture=nb-NO\",\n            \"rel\": \"view-payment\",\n            \"contentType\": \"application/javascript\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Cancel payment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transaction\": {\n        \"description\": \"your description\",\n        \"payeeReference\": \"{{payeeReference}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{operationcancelPayment}}",
									"host": [
										"{{operationcancelPayment}}"
									]
								}
							},
							"response": [
								{
									"name": "Cancel payment",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transaction\": {\n        \"description\": \"your description\",\n        \"payeeReference\": \"someUniqueReference1590136681\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/cancellations",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"vipps",
												"payments",
												"77e9c9ea-f891-41df-bd88-08d7fcc96242",
												"cancellations"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/cancellations/7e0c5df9-59cf-4b3b-c68e-08d7fcc023d1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 08:38:01 GMT"
										},
										{
											"key": "Content-Length",
											"value": "625"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242\",\n    \"cancellation\": {\n        \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/cancellations/7e0c5df9-59cf-4b3b-c68e-08d7fcc023d1\",\n        \"transaction\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/transactions/7e0c5df9-59cf-4b3b-c68e-08d7fcc023d1\",\n            \"created\": \"2020-05-22T08:38:02.7195737Z\",\n            \"updated\": \"2020-05-22T08:38:02.4086825Z\",\n            \"type\": \"Cancellation\",\n            \"state\": \"Completed\",\n            \"number\": 42100038548,\n            \"amount\": 8999,\n            \"vatAmount\": 0,\n            \"description\": \"your description\",\n            \"payeeReference\": \"someUniqueReference1590136681\",\n            \"isOperational\": false,\n            \"operations\": []\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get payment (verify cancel OK)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e5ec37f0-98df-48a9-ba4b-7878751590c6",
										"exec": [
											"responseCode = pm.response.code;\r",
											"responseBody = pm.response.json();\r",
											"\r",
											"if (responseCode >= 200 && responseCode < 300) {\r",
											"    const operations = responseBody.operations;\r",
											"    const directPayment = operations.find(operations => operations.rel.startsWith(\"direct-\"));\r",
											"    const redirectPayment = operations.find(operations => operations.rel.startsWith(\"redirect-\"));\r",
											"    const seamlessPayment = operations.find(operations => operations.rel === \"view-payment\");\r",
											"    const abortPayment = operations.find(operations => operations.rel.includes(\"abort\"));\r",
											"    const capturePayment = operations.find(operations => operations.rel === \"create-capture\");\r",
											"    const cancelPayment = operations.find(operations => operations.rel === \"create-cancellation\");\r",
											"    const reversePayment = operations.find(operations => operations.rel === \"create-reversal\");\r",
											"    const paidPayment = operations.find(operations => operations.rel === \"paid-payment\");\r",
											"    // Use data to populate immediately relevant data to continue flow.\r",
											"    if (!paidPayment) {\r",
											"        pm.globals.set(\"operationDirectPayment\", directPayment ? directPayment.href : \"N/A\");       // These will only be set if the operation is found\r",
											"        pm.globals.set(\"operationRedirectPayment\", redirectPayment ? redirectPayment.href : \"N/A\"); // This is to avoid using data of wrong payment\r",
											"        pm.globals.set(\"operationSeamlessPayment\", seamlessPayment ? seamlessPayment.href : \"N/A\"); // Furthermore you will get an error \r",
											"        pm.globals.set(\"operationAbortPayment\", abortPayment ? abortPayment.href : \"N/A\");          // when trying to use N/A data.\r",
											"    }\r",
											"    else\r",
											"        pm.globals.set(\"operationPaidPayment\", paidPayment.href);                                        // this one has already been confirmed exists when setting it here.\r",
											"\r",
											"    pm.globals.set(\"operationcapturePayment\", capturePayment ? capturePayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationcancelPayment\", cancelPayment ? cancelPayment.href : \"N/A\");\r",
											"    pm.globals.set(\"operationreversePayment\", reversePayment ? reversePayment.href : \"N/A\");\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{merchantToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}{{paymentId}}?$expand=cancellations",
									"host": [
										"{{baseUrl}}{{paymentId}}"
									],
									"query": [
										{
											"key": "$expand",
											"value": "cancellations"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get payment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242",
											"protocol": "https",
											"host": [
												"api",
												"externalintegration",
												"payex",
												"com"
											],
											"path": [
												"psp",
												"vipps",
												"payments",
												"77e9c9ea-f891-41df-bd88-08d7fcc96242"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "X-Powered-By",
											"value": "ASP.NET"
										},
										{
											"key": "Date",
											"value": "Fri, 22 May 2020 08:30:32 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1802"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=16070400; includeSubDomains"
										}
									],
									"cookie": [],
									"body": "{\n    \"payment\": {\n        \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242\",\n        \"number\": 42100038543,\n        \"created\": \"2020-05-22T08:26:07.0724844Z\",\n        \"updated\": \"2020-05-22T08:30:22.1580058Z\",\n        \"instrument\": \"Vipps\",\n        \"operation\": \"Purchase\",\n        \"intent\": \"Authorization\",\n        \"state\": \"Ready\",\n        \"currency\": \"NOK\",\n        \"prices\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/prices\"\n        },\n        \"amount\": 10000,\n        \"remainingCaptureAmount\": 10000,\n        \"remainingCancellationAmount\": 10000,\n        \"description\": \"test description\",\n        \"payerReference\": \"AB1234\",\n        \"initiatingSystemUserAgent\": \"PostmanRuntime/7.24.1\",\n        \"userAgent\": \"Mozilla/5.0 Postman\",\n        \"language\": \"nb-NO\",\n        \"transactions\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/transactions\"\n        },\n        \"authorizations\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/authorizations\"\n        },\n        \"urls\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/urls\"\n        },\n        \"payeeInfo\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/payeeinfo\"\n        },\n        \"metadata\": {\n            \"id\": \"/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/metadata\"\n        }\n    },\n    \"operations\": [\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/cancellations\",\n            \"rel\": \"create-cancellation\"\n        },\n        {\n            \"method\": \"POST\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/captures\",\n            \"rel\": \"create-capture\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://api.externalintegration.payex.com/psp/vipps/payments/77e9c9ea-f891-41df-bd88-08d7fcc96242/paid\",\n            \"rel\": \"paid-payment\"\n        },\n        {\n            \"method\": \"GET\",\n            \"href\": \"https://ecom.externalintegration.payex.com/vipps/core/scripts/client/px.vipps.client.js?token=58d2ef439e3644e7779477e8b5cfc943914a196d0792a5f47560d33f5f0b83c7&Culture=nb-NO\",\n            \"rel\": \"view-payment\",\n            \"contentType\": \"application/javascript\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}